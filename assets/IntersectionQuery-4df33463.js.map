{"version":3,"file":"IntersectionQuery-4df33463.js","sources":["../../node_modules/kld-affine/lib/Vector2D.js","../../node_modules/mousetrap/mousetrap.js","../../node_modules/reakeys/dist/index.js","../../node_modules/defaulty/dist/defaulty.js","../../node_modules/kld-path-parser/lib/PathLexeme.js","../../node_modules/kld-path-parser/lib/PathLexer.js","../../node_modules/kld-path-parser/lib/PathParser.js","../../node_modules/kld-intersections/lib/PathHandler.js","../../node_modules/kld-intersections/lib/ShapeInfo.js","../../node_modules/kld-intersections/lib/IntersectionQuery.js"],"sourcesContent":["/**\n *  Vector2D.js\n *  @module Vector2D\n *  @copyright 2001-2019 Kevin Lindsey\n */\n\n/**\n *  Vector2D\n *\n *  @memberof module:kld-affine\n */\nclass Vector2D {\n    /**\n     *  Vector2D\n     *\n     *  @param {number} x\n     *  @param {number} y\n     *  @returns {module:kld-affine.Vector2D}\n     */\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     *  fromPoints\n     *\n     *  @param {module:kld-affine.Point2D} p1\n     *  @param {module:kld-affine.Point2D} p2\n     *  @returns {module:kld-affine.Vector2D}\n     */\n    static fromPoints(p1, p2) {\n        return new Vector2D(\n            p2.x - p1.x,\n            p2.y - p1.y\n        );\n    }\n\n    /**\n     *  length\n     *\n     *  @returns {number}\n     */\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    /**\n     *  magnitude\n     *\n     *  @returns {number}\n     */\n    magnitude() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    /**\n     *  dot\n     *\n     *  @param {module:kld-affine.Vector2D} that\n     *  @returns {number}\n     */\n    dot(that) {\n        return this.x * that.x + this.y * that.y;\n    }\n\n    /**\n     *  cross\n     *\n     *  @param {module:kld-affine.Vector2D} that\n     *  @returns {number}\n     */\n    cross(that) {\n        return this.x * that.y - this.y * that.x;\n    }\n\n    /**\n     *  determinant\n     *\n     *  @param {module:kld-affine.Vector2D} that\n     *  @returns {number}\n     */\n    determinant(that) {\n        return this.x * that.y - this.y * that.x;\n    }\n\n    /**\n     *  unit\n     *\n     *  @returns {module:kld-affine.Vector2D}\n     */\n    unit() {\n        return this.divide(this.length());\n    }\n\n    /**\n     *  add\n     *\n     *  @param {module:kld-affine.Vector2D} that\n     *  @returns {module:kld-affine.Vector2D}\n     */\n    add(that) {\n        return new this.constructor(this.x + that.x, this.y + that.y);\n    }\n\n    /**\n     *  subtract\n     *\n     *  @param {module:kld-affine.Vector2D} that\n     *  @returns {module:kld-affine.Vector2D}\n     */\n    subtract(that) {\n        return new this.constructor(this.x - that.x, this.y - that.y);\n    }\n\n    /**\n     *  multiply\n     *\n     *  @param {number} scalar\n     *  @returns {module:kld-affine.Vector2D}\n     */\n    multiply(scalar) {\n        return new this.constructor(this.x * scalar, this.y * scalar);\n    }\n\n    /**\n     *  divide\n     *\n     *  @param {number} scalar\n     *  @returns {module:kld-affine.Vector2D}\n     */\n    divide(scalar) {\n        return new this.constructor(this.x / scalar, this.y / scalar);\n    }\n\n    /**\n     *  angleBetween\n     *\n     *  @param {module:kld-affine.Vector2D} that\n     *  @returns {number}\n     */\n    angleBetween(that) {\n        let cos = this.dot(that) / (this.length() * that.length());\n        cos = Math.max(-1, Math.min(cos, 1));\n        const radians = Math.acos(cos);\n\n        return (this.cross(that) < 0.0) ? -radians : radians;\n    }\n\n    /**\n     *  Find a vector is that is perpendicular to this vector\n     *\n     *  @returns {module:kld-affine.Vector2D}\n     */\n    perp() {\n        return new this.constructor(-this.y, this.x);\n    }\n\n    /**\n     *  Find the component of the specified vector that is perpendicular to\n     *  this vector\n     *\n     *  @param {module:kld-affine.Vector2D} that\n     *  @returns {module:kld-affine.Vector2D}\n     */\n    perpendicular(that) {\n        return this.subtract(this.project(that));\n    }\n\n    /**\n     *  project\n     *\n     *  @param {module:kld-affine.Vector2D} that\n     *  @returns {module:kld-affine.Vector2D}\n     */\n    project(that) {\n        const percent = this.dot(that) / that.dot(that);\n\n        return that.multiply(percent);\n    }\n\n    /**\n     *  transform\n     *\n     *  @param {module:kld-affine.Matrix2D} matrix\n     *  @returns {module:kld-affine.Vector2D}\n     */\n    transform(matrix) {\n        return new this.constructor(\n            matrix.a * this.x + matrix.c * this.y,\n            matrix.b * this.x + matrix.d * this.y\n        );\n    }\n\n    /**\n     *  equals\n     *\n     *  @param {module:kld-affine.Vector2D} that\n     *  @returns {boolean}\n     */\n    equals(that) {\n        return (\n            this.x === that.x &&\n            this.y === that.y\n        );\n    }\n\n    /**\n     *  precisionEquals\n     *\n     *  @param {module:kld-affine.Vector2D} that\n     *  @param {number} precision\n     *  @returns {boolean}\n     */\n    precisionEquals(that, precision) {\n        return (\n            Math.abs(this.x - that.x) < precision &&\n            Math.abs(this.y - that.y) < precision\n        );\n    }\n\n    /**\n     *  toString\n     *\n     *  @returns {string}\n     */\n    toString() {\n        return `vector(${this.x},${this.y})`;\n    }\n}\n\nexport default Vector2D;\n","/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.5\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,\n        // not the initial event target in the shadow tree. Note that not all events cross the\n        // shadow boundary.\n        // For shadow trees with `mode: 'open'`, the initial event target is the first element in\n        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event\n        // target cannot be obtained.\n        if ('composedPath' in e && typeof e.composedPath === 'function') {\n            // For open shadow trees, update `element` so that the following check works.\n            var initialEventTarget = e.composedPath()[0];\n            if (initialEventTarget !== e.target) {\n                element = initialEventTarget;\n            }\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n","import { useState, useEffect, useLayoutEffect, useMemo } from \"react\";\nimport Mousetrap from \"mousetrap\";\nconst createStateHook = () => {\n  const mousetraps = /* @__PURE__ */ new Map();\n  let keys = [];\n  const bindKeys = (nextKeys) => {\n    nextKeys.forEach((k) => {\n      if (k.disabled) {\n        return;\n      }\n      if (k.ref) {\n        if (!k.ref.current) {\n          return;\n        }\n        const element = k.ref.current;\n        if (!mousetraps.has(element)) {\n          mousetraps.set(element, new Mousetrap(element));\n        }\n        mousetraps.get(element).bind(k.keys, k.callback, k.action);\n      } else {\n        if (!mousetraps.get(void 0)) {\n          mousetraps.set(void 0, Mousetrap);\n        }\n        mousetraps.get(void 0).bind(k.keys, k.callback, k.action);\n      }\n    });\n  };\n  const addKeys = (nextKeys) => {\n    keys = [...keys, ...nextKeys];\n    bindKeys(nextKeys);\n  };\n  const removeKeys = (nextKeys) => {\n    keys = keys.filter((k) => !nextKeys.includes(k));\n    nextKeys.forEach((k) => {\n      var _a, _b;\n      if (k.ref) {\n        if (!k.ref.current) {\n          return;\n        }\n        (_a = mousetraps.get(k.ref.current)) == null ? void 0 : _a.unbind(k.keys, k.action);\n      } else {\n        (_b = mousetraps.get(void 0)) == null ? void 0 : _b.unbind(k.keys, k.action);\n      }\n    });\n    for (const [element] of mousetraps) {\n      if (element === void 0) {\n        if (keys.some((k) => k.ref === void 0)) {\n          continue;\n        }\n      } else {\n        if (keys.some((k) => {\n          var _a;\n          return ((_a = k.ref) == null ? void 0 : _a.current) === element;\n        })) {\n          continue;\n        }\n      }\n      mousetraps.delete(element);\n    }\n    bindKeys(keys);\n  };\n  return () => {\n    const [state, setState] = useState([]);\n    useEffect(() => {\n      setState(keys);\n    }, []);\n    return [state, addKeys, removeKeys];\n  };\n};\nconst useHotkeyState = createStateHook();\nconst useHotkeys = (shortcuts) => {\n  const [keys, addKeys, removeKeys] = useHotkeyState();\n  useLayoutEffect(() => {\n    if (shortcuts) {\n      addKeys(shortcuts);\n    }\n    return () => {\n      if (shortcuts) {\n        removeKeys(shortcuts);\n      }\n    };\n  }, [addKeys, removeKeys, shortcuts]);\n  return useMemo(\n    () => keys.reduce((agg, cur) => {\n      if (!agg.find((a) => a.keys === cur.keys && a.ref && cur.ref)) {\n        agg.push(cur);\n      }\n      return agg;\n    }, []),\n    [keys]\n  );\n};\nlet isMac = false;\ntry {\n  if (navigator)\n    isMac = navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n} catch (e) {\n  console.warn(e);\n}\nconst MODIFIER_KEY = isMac ? \"⌘\" : \"CTRL\";\nfunction getHotkeyText(hotkey) {\n  return hotkey.replace(\"modifier\", MODIFIER_KEY).replace(\"mod\", MODIFIER_KEY).replace(\"shift\", \"⇧\");\n}\nexport {\n  MODIFIER_KEY,\n  getHotkeyText,\n  useHotkeyState,\n  useHotkeys\n};\n//# sourceMappingURL=index.js.map\n","// [AIV]  Defaulty Build version: 2.1.0  \r\n (function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"defaulty\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"defaulty\"] = factory();\n\telse\n\t\troot[\"defaulty\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(1);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar deepCopy = __webpack_require__(2);\n\n/**\r\n * Copies deep missing properties to the target object\r\n * @param targetObj {Object} target object\r\n * @param defaultObj {Object} default object\r\n * @param exclude {Array} exclude properties from copy\r\n * @returns {*}\r\n */\n\nvar defaulty = function defaulty(targetObj, defaultObj) {\n    var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n    for (var i in defaultObj) {\n        /* istanbul ignore else  */\n        if (defaultObj.hasOwnProperty(i) && exclude.indexOf(i) === -1) {\n            if (!targetObj.hasOwnProperty(i) || typeof targetObj[i] === 'undefined') {\n                targetObj[i] = defaultObj[i];\n            } else if (_typeof(targetObj[i]) === 'object') {\n                defaulty(targetObj[i], defaultObj[i]);\n            }\n        }\n    }\n    return targetObj;\n};\n\n/**\r\n * Creates new target object and copies deep missing properties to the target object\r\n * @param args[0] {Object} target object\r\n * @param args[1] {Object} default object\r\n * @param args[2] {Array} exclude properties from copy\r\n * @returns {*}\r\n */\nvar copy = function copy() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n    }\n\n    //args[0] = Object.assign({}, args[0]);\n    args[0] = deepCopy(args[0]);\n    return defaulty.apply(undefined, args);\n};\n\nmodule.exports = defaulty;\nmodule.exports.copy = copy;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n;(function (name, root, factory) {\n  if (( false ? 'undefined' : _typeof(exports)) === 'object') {\n    module.exports = factory();\n  }\n  /* istanbul ignore next */\n  else if (true) {\n      !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {\n      root[name] = factory();\n    }\n})('dcopy', undefined, function () {\n  /**\n   * Deep copy objects and arrays\n   *\n   * @param {Object/Array} target\n   * @return {Object/Array} copy\n   * @api public\n   */\n\n  return function (target) {\n    if (/number|string|boolean/.test(typeof target === 'undefined' ? 'undefined' : _typeof(target))) {\n      return target;\n    }\n    if (target instanceof Date) {\n      return new Date(target.getTime());\n    }\n\n    var copy = target instanceof Array ? [] : {};\n    walk(target, copy);\n    return copy;\n\n    function walk(target, copy) {\n      for (var key in target) {\n        var obj = target[key];\n        if (obj instanceof Date) {\n          var value = new Date(obj.getTime());\n          add(copy, key, value);\n        } else if (obj instanceof Function) {\n          var value = obj;\n          add(copy, key, value);\n        } else if (obj instanceof Array) {\n          var value = [];\n          var last = add(copy, key, value);\n          walk(obj, last);\n        } else if (obj instanceof Object) {\n          var value = {};\n          var last = add(copy, key, value);\n          walk(obj, last);\n        } else {\n          var value = obj;\n          add(copy, key, value);\n        }\n      }\n    }\n  };\n\n  /**\n   * Adds a value to the copy object based on its type\n   *\n   * @api private\n   */\n\n  function add(copy, key, value) {\n    if (copy instanceof Array) {\n      copy.push(value);\n      return copy[copy.length - 1];\n    } else if (copy instanceof Object) {\n      copy[key] = value;\n      return copy[key];\n    }\n  }\n});\n\n/***/ })\n/******/ ]);\n}); ","/**\n *  PathLexeme.js\n *\n *  @copyright 2002, 2013 Kevin Lindsey\n *  @module PathLexeme\n */\n\n/**\n *  PathLexeme\n */\nclass PathLexeme {\n    /**\n     *  PathLexeme\n     *\n     *  @param {number} type\n     *  @param {string} text\n     */\n    constructor(type, text) {\n        this.type = type;\n        this.text = text;\n    }\n\n    /**\n     *  Determine if this lexeme is of the given type\n     *\n     *  @param {number} type\n     *  @returns {boolean}\n     */\n    typeis(type) {\n        return this.type === type;\n    }\n}\n\n/*\n * token type enumerations\n */\nPathLexeme.UNDEFINED = 0;\nPathLexeme.COMMAND = 1;\nPathLexeme.NUMBER = 2;\nPathLexeme.EOD = 3;\n\nexport default PathLexeme;\n","/**\n *  PathLexer.js\n *\n *  @copyright 2003, 2013 Kevin Lindsey\n *  @module PathLexer\n */\n\nimport PathLexeme from \"./PathLexeme.js\";\n\n/**\n *  Create a new instance of PathLexer\n */\nclass PathLexer {\n    /**\n     *  @param {string} [pathData]\n     */\n    constructor(pathData) {\n        if (pathData === null || pathData === undefined) {\n            pathData = \"\";\n        }\n\n        this.setPathData(pathData);\n    }\n\n    /**\n     *  setPathData\n     *\n     *  @param {string} pathData\n     */\n    setPathData(pathData) {\n        if (typeof pathData !== \"string\") {\n            throw new TypeError(\"The first parameter must be a string\");\n        }\n\n        this._pathData = pathData;\n    }\n\n    /**\n     *  getNextToken\n     *\n     *  @returns {PathLexeme}\n     */\n    getNextToken() {\n        let result = null;\n        let d = this._pathData;\n\n        while (result === null) {\n            if (d === null || d === \"\") {\n                result = new PathLexeme(PathLexeme.EOD, \"\");\n            }\n            else if (d.match(/^([ \\t\\r\\n,]+)/)) {\n                d = d.substr(RegExp.$1.length);\n            }\n            else if (d.match(/^([AaCcHhLlMmQqSsTtVvZz])/)) {\n                result = new PathLexeme(PathLexeme.COMMAND, RegExp.$1);\n                d = d.substr(RegExp.$1.length);\n            }\n            /* eslint-disable-next-line unicorn/no-unsafe-regex */\n            else if (d.match(/^(([-+]?\\d+(\\.\\d*)?|[-+]?\\.\\d+)([eE][-+]?\\d+)?)/)) {\n                result = new PathLexeme(PathLexeme.NUMBER, RegExp.$1);\n                d = d.substr(RegExp.$1.length);\n            }\n            else {\n                throw new SyntaxError(`Unrecognized path data: ${d}`);\n            }\n        }\n\n        this._pathData = d;\n\n        return result;\n    }\n}\n\nexport default PathLexer;\n","/**\n *  PathParser.js\n *\n *  @copyright 2003, 2017 Kevin Lindsey\n *  @module PathParser\n */\n\nimport PathLexer from \"./PathLexer.js\";\nimport PathLexeme from \"./PathLexeme.js\";\n\nconst BOP = \"BOP\";\n\n/**\n *  PathParser\n */\nclass PathParser {\n    /**\n     * constructor\n     */\n    constructor() {\n        this._lexer = new PathLexer();\n        this._handler = null;\n    }\n\n    /**\n     *  parseData\n     *\n     *  @param {string} pathData\n     *  @throws {Error}\n     */\n    parseData(pathData) {\n        if (typeof pathData !== \"string\") {\n            throw new TypeError(`The first parameter must be a string: ${pathData}`);\n        }\n\n        // begin parse\n        if (this._handler !== null && typeof this._handler.beginParse === \"function\") {\n            this._handler.beginParse();\n        }\n\n        // pass the pathData to the lexer\n        const lexer = this._lexer;\n\n        lexer.setPathData(pathData);\n\n        // set mode to signify new path - Beginning Of Path\n        let mode = BOP;\n\n        // Process all tokens\n        let lastToken = null;\n        let token = lexer.getNextToken();\n\n        while (token.typeis(PathLexeme.EOD) === false) {\n            let parameterCount;\n            const params = [];\n\n            // process current token\n            switch (token.type) {\n                case PathLexeme.COMMAND:\n                    if (mode === BOP && token.text !== \"M\" && token.text !== \"m\") {\n                        throw new SyntaxError(`New paths must begin with a moveto command. Found '${token.text}'`);\n                    }\n\n                    // Set new parsing mode\n                    mode = token.text;\n\n                    // Get count of numbers that must follow this command\n                    parameterCount = PathParser.PARAMCOUNT[token.text.toUpperCase()];\n\n                    // Advance past command token\n                    token = lexer.getNextToken();\n                    break;\n\n                case PathLexeme.NUMBER:\n                    // Most commands allow you to keep repeating parameters\n                    // without specifying the command again.  We just assume\n                    // that is the case and do nothing since the mode remains\n                    // the same\n\n                    if (mode === BOP) {\n                        throw new SyntaxError(`New paths must begin with a moveto command. Found '${token.text}'`);\n                    }\n                    else {\n                        parameterCount = PathParser.PARAMCOUNT[mode.toUpperCase()];\n                    }\n                    break;\n\n                default:\n                    throw new SyntaxError(`Unrecognized command type: ${token.type}`);\n            }\n\n            // Get parameters\n            for (let i = 0; i < parameterCount; i++) {\n                switch (token.type) {\n                    case PathLexeme.COMMAND:\n                        throw new SyntaxError(`Parameter must be a number. Found '${token.text}'`);\n\n                    case PathLexeme.NUMBER:\n                        // convert current parameter to a float and add to\n                        // parameter list\n                        params[i] = parseFloat(token.text);\n                        break;\n\n                    case PathLexeme.EOD:\n                        throw new SyntaxError(\"Unexpected end of string\");\n\n                    default:\n                        throw new SyntaxError(`Unrecognized parameter type. Found type '${token.type}'`);\n                }\n\n                token = lexer.getNextToken();\n            }\n\n            // fire handler\n            if (this._handler !== null) {\n                const handler = this._handler;\n                const methodName = PathParser.METHODNAME[mode];\n\n                // convert types for arcs\n                if (mode === \"a\" || mode === \"A\") {\n                    params[3] = params[3] !== 0;\n                    params[4] = params[4] !== 0;\n                }\n\n                if (handler !== null && typeof handler[methodName] === \"function\") {\n                    handler[methodName](...params);\n                }\n            }\n\n            // Lineto's follow moveto when no command follows moveto params.  Go\n            // ahead and set the mode just in case no command follows the moveto\n            // command\n            switch (mode) {\n                case \"M\":\n                    mode = \"L\";\n                    break;\n                case \"m\":\n                    mode = \"l\";\n                    break;\n                case \"Z\":\n                case \"z\":\n                    mode = \"BOP\";\n                    break;\n                default:\n                    // ignore for now\n            }\n\n            if (token === lastToken) {\n                throw new SyntaxError(`Parser stalled on '${token.text}'`);\n            }\n            else {\n                lastToken = token;\n            }\n        }\n\n        // end parse\n        if (this._handler !== null && typeof this._handler.endParse === \"function\") {\n            this._handler.endParse();\n        }\n    }\n\n    /**\n     *  setHandler\n     *\n     *  @param {Object} handler\n     */\n    setHandler(handler) {\n        this._handler = handler;\n    }\n}\n\n/*\n * class constants\n */\nPathParser.PARAMCOUNT = {\n    A: 7,\n    C: 6,\n    H: 1,\n    L: 2,\n    M: 2,\n    Q: 4,\n    S: 4,\n    T: 2,\n    V: 1,\n    Z: 0\n};\nPathParser.METHODNAME = {\n    A: \"arcAbs\",\n    a: \"arcRel\",\n    C: \"curvetoCubicAbs\",\n    c: \"curvetoCubicRel\",\n    H: \"linetoHorizontalAbs\",\n    h: \"linetoHorizontalRel\",\n    L: \"linetoAbs\",\n    l: \"linetoRel\",\n    M: \"movetoAbs\",\n    m: \"movetoRel\",\n    Q: \"curvetoQuadraticAbs\",\n    q: \"curvetoQuadraticRel\",\n    S: \"curvetoCubicSmoothAbs\",\n    s: \"curvetoCubicSmoothRel\",\n    T: \"curvetoQuadraticSmoothAbs\",\n    t: \"curvetoQuadraticSmoothRel\",\n    V: \"linetoVerticalAbs\",\n    v: \"linetoVerticalRel\",\n    Z: \"closePath\",\n    z: \"closePath\"\n};\n\nexport default PathParser;\n","/**\n *  PathHandler.js\n *\n *  @copyright 2017 Kevin Lindsey\n */\n\nimport {Point2D, Vector2D} from \"kld-affine\";\n\nconst TWO_PI = 2.0 * Math.PI;\n\n/**\n * Based on the SVG 1.1 specification, Appendix F: Implementation Requirements,\n * Section F.6 \"Elliptical arc implementation notes\"\n * {@see https://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes}\n *\n * @param {module:kld-affine.Point2D} startPoint\n * @param {module:kld-affine.Point2D} endPoint\n * @param {number} rx\n * @param {number} ry\n * @param {number} angle\n * @param {boolean} arcFlag\n * @param {boolean} sweepFlag\n * @returns {Array}\n */\nfunction getArcParameters(startPoint, endPoint, rx, ry, angle, arcFlag, sweepFlag) {\n    angle = angle * Math.PI / 180;\n\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const TOLERANCE = 1e-6;\n\n    // Section (F.6.5.1)\n    const halfDiff = startPoint.subtract(endPoint).multiply(0.5);\n    const x1p = halfDiff.x * c + halfDiff.y * s;\n    const y1p = halfDiff.x * -s + halfDiff.y * c;\n\n    // Section (F.6.6.1)\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    // Section (F.6.6.2)\n    const x1px1p = x1p * x1p;\n    const y1py1p = y1p * y1p;\n    const lambda = (x1px1p / (rx * rx)) + (y1py1p / (ry * ry));\n\n    // Section (F.6.6.3)\n    if (lambda > 1) {\n        const factor = Math.sqrt(lambda);\n\n        rx *= factor;\n        ry *= factor;\n    }\n\n    // Section (F.6.5.2)\n    const rxrx = rx * rx;\n    const ryry = ry * ry;\n    const rxy1 = rxrx * y1py1p;\n    const ryx1 = ryry * x1px1p;\n\n    let factor = (rxrx * ryry - rxy1 - ryx1) / (rxy1 + ryx1);\n\n    if (Math.abs(factor) < TOLERANCE) {\n        factor = 0;\n    }\n\n    let sq = Math.sqrt(factor);\n\n    if (arcFlag === sweepFlag) {\n        sq = -sq;\n    }\n\n    // Section (F.6.5.3)\n    const mid = startPoint.add(endPoint).multiply(0.5);\n    const cxp = sq * rx * y1p / ry;\n    const cyp = sq * -ry * x1p / rx;\n\n    // Section (F.6.5.5 - F.6.5.6)\n    const xcr1 = (x1p - cxp) / rx;\n    const xcr2 = (x1p + cxp) / rx;\n    const ycr1 = (y1p - cyp) / ry;\n    const ycr2 = (y1p + cyp) / ry;\n\n    const theta1 = new Vector2D(1, 0).angleBetween(new Vector2D(xcr1, ycr1));\n    // let deltaTheta = normalizeAngle(new Vector2D(xcr1, ycr1).angleBetween(new Vector2D(-xcr2, -ycr2)));\n    let deltaTheta = new Vector2D(xcr1, ycr1).angleBetween(new Vector2D(-xcr2, -ycr2));\n\n    if (sweepFlag === false) {\n        deltaTheta -= TWO_PI;\n    }\n\n    return [\n        cxp * c - cyp * s + mid.x,\n        cxp * s + cyp * c + mid.y,\n        rx,\n        ry,\n        theta1,\n        theta1 + deltaTheta\n    ];\n}\n\n/**\n *  PathHandler\n */\nclass PathHandler {\n    /**\n     * PathHandler\n     *\n     * @param {ShapeInfo} shapeCreator\n     */\n    constructor(shapeCreator) {\n        this.shapeCreator = shapeCreator;\n        this.shapes = [];\n        this.firstX = null;\n        this.firstY = null;\n        this.lastX = null;\n        this.lastY = null;\n        this.lastCommand = null;\n    }\n\n    /**\n     * beginParse\n     */\n    beginParse() {\n        // zero out the sub-path array\n        this.shapes = [];\n\n        // clear firstX, firstY, lastX, and lastY\n        this.firstX = null;\n        this.firstY = null;\n        this.lastX = null;\n        this.lastY = null;\n\n        // need to remember last command type to determine how to handle the\n        // relative Bezier commands\n        this.lastCommand = null;\n    }\n\n    /**\n     *  addShape\n     *\n     *  @param {ShapeInfo} shape\n     */\n    addShape(shape) {\n        this.shapes.push(shape);\n    }\n\n    /**\n     *  arcAbs - A\n     *\n     *  @param {number} rx\n     *  @param {number} ry\n     *  @param {number} xAxisRotation\n     *  @param {boolean} arcFlag\n     *  @param {boolean} sweepFlag\n     *  @param {number} x\n     *  @param {number} y\n     */\n    arcAbs(rx, ry, xAxisRotation, arcFlag, sweepFlag, x, y) {\n        if (rx === 0 || ry === 0) {\n            this.addShape(this.shapeCreator.line(\n                this.lastX, this.lastY,\n                x, y\n            ));\n        }\n        else {\n            const arcParameters = getArcParameters(\n                new Point2D(this.lastX, this.lastY),\n                new Point2D(x, y),\n                rx, ry,\n                xAxisRotation,\n                arcFlag, sweepFlag\n            );\n\n            this.addShape(this.shapeCreator.arc(...arcParameters));\n        }\n\n        this.lastCommand = \"A\";\n        this.lastX = x;\n        this.lastY = y;\n    }\n\n    /**\n     *  arcRel - a\n     *\n     *  @param {number} rx\n     *  @param {number} ry\n     *  @param {number} xAxisRotation\n     *  @param {boolean} arcFlag\n     *  @param {boolean} sweepFlag\n     *  @param {number} x\n     *  @param {number} y\n     */\n    arcRel(rx, ry, xAxisRotation, arcFlag, sweepFlag, x, y) {\n        if (rx === 0 || ry === 0) {\n            this.addShape(this.shapeCreator.line(\n                this.lastX, this.lastY,\n                this.lastX + x, this.lastY + y\n            ));\n        }\n        else {\n            const arcParameters = getArcParameters(\n                new Point2D(this.lastX, this.lastY),\n                new Point2D(this.lastX + x, this.lastY + y),\n                rx, ry,\n                xAxisRotation,\n                arcFlag, sweepFlag\n            );\n\n            this.addShape(this.shapeCreator.arc(...arcParameters));\n        }\n\n        this.lastCommand = \"a\";\n        this.lastX += x;\n        this.lastY += y;\n    }\n\n    /**\n     *  curvetoCubicAbs - C\n     *\n     *  @param {number} x1\n     *  @param {number} y1\n     *  @param {number} x2\n     *  @param {number} y2\n     *  @param {number} x\n     *  @param {number} y\n     */\n    curvetoCubicAbs(x1, y1, x2, y2, x, y) {\n        this.addShape(this.shapeCreator.cubicBezier(\n            this.lastX, this.lastY,\n            x1, y1,\n            x2, y2,\n            x, y\n        ));\n\n        this.lastX = x;\n        this.lastY = y;\n        this.lastCommand = \"C\";\n    }\n\n    /**\n     *  curvetoCubicRel - c\n     *\n     *  @param {number} x1\n     *  @param {number} y1\n     *  @param {number} x2\n     *  @param {number} y2\n     *  @param {number} x\n     *  @param {number} y\n     */\n    curvetoCubicRel(x1, y1, x2, y2, x, y) {\n        this.addShape(this.shapeCreator.cubicBezier(\n            this.lastX, this.lastY,\n            this.lastX + x1, this.lastY + y1,\n            this.lastX + x2, this.lastY + y2,\n            this.lastX + x, this.lastY + y\n        ));\n\n        this.lastX += x;\n        this.lastY += y;\n        this.lastCommand = \"c\";\n    }\n\n    /**\n     *  linetoHorizontalAbs - H\n     *\n     *  @param {number} x\n     */\n    linetoHorizontalAbs(x) {\n        this.addShape(this.shapeCreator.line(\n            this.lastX, this.lastY,\n            x, this.lastY\n        ));\n\n        this.lastX = x;\n        this.lastCommand = \"H\";\n    }\n\n    /**\n     *  linetoHorizontalRel - h\n     *\n     *  @param {number} x\n     */\n    linetoHorizontalRel(x) {\n        this.addShape(this.shapeCreator.line(\n            this.lastX, this.lastY,\n            this.lastX + x, this.lastY\n        ));\n\n        this.lastX += x;\n        this.lastCommand = \"h\";\n    }\n\n    /**\n     *  linetoAbs - L\n     *\n     *  @param {number} x\n     *  @param {number} y\n     */\n    linetoAbs(x, y) {\n        this.addShape(this.shapeCreator.line(\n            this.lastX, this.lastY,\n            x, y\n        ));\n\n        this.lastX = x;\n        this.lastY = y;\n        this.lastCommand = \"L\";\n    }\n\n    /**\n     *  linetoRel - l\n     *\n     *  @param {number} x\n     *  @param {number} y\n     */\n    linetoRel(x, y) {\n        this.addShape(this.shapeCreator.line(\n            this.lastX, this.lastY,\n            this.lastX + x, this.lastY + y\n        ));\n\n        this.lastX += x;\n        this.lastY += y;\n        this.lastCommand = \"l\";\n    }\n\n    /**\n     *  movetoAbs - M\n     *\n     *  @param {number} x\n     *  @param {number} y\n     */\n    movetoAbs(x, y) {\n        this.firstX = x;\n        this.firstY = y;\n        this.lastX = x;\n        this.lastY = y;\n        this.lastCommand = \"M\";\n    }\n\n    /**\n     *  movetoRel - m\n     *\n     *  @param {number} x\n     *  @param {number} y\n     */\n    movetoRel(x, y) {\n        this.firstX += x;\n        this.firstY += y;\n        this.lastX += x;\n        this.lastY += y;\n        this.lastCommand = \"m\";\n    }\n\n    /**\n     *  curvetoQuadraticAbs - Q\n     *\n     *  @param {number} x1\n     *  @param {number} y1\n     *  @param {number} x\n     *  @param {number} y\n     */\n    curvetoQuadraticAbs(x1, y1, x, y) {\n        this.addShape(this.shapeCreator.quadraticBezier(\n            this.lastX, this.lastY,\n            x1, y1,\n            x, y\n        ));\n\n        this.lastX = x;\n        this.lastY = y;\n        this.lastCommand = \"Q\";\n    }\n\n    /**\n     *  curvetoQuadraticRel - q\n     *\n     *  @param {number} x1\n     *  @param {number} y1\n     *  @param {number} x\n     *  @param {number} y\n     */\n    curvetoQuadraticRel(x1, y1, x, y) {\n        this.addShape(this.shapeCreator.quadraticBezier(\n            this.lastX, this.lastY,\n            this.lastX + x1, this.lastY + y1,\n            this.lastX + x, this.lastY + y\n        ));\n\n        this.lastX += x;\n        this.lastY += y;\n        this.lastCommand = \"q\";\n    }\n\n    /**\n     *  curvetoCubicSmoothAbs - S\n     *\n     *  @param {number} x2\n     *  @param {number} y2\n     *  @param {number} x\n     *  @param {number} y\n     */\n    curvetoCubicSmoothAbs(x2, y2, x, y) {\n        let controlX, controlY;\n\n        if (this.lastCommand.match(/^[SsCc]$/)) {\n            const secondToLast = this.shapes[this.shapes.length - 1].args[2];\n\n            controlX = 2 * this.lastX - secondToLast.x;\n            controlY = 2 * this.lastY - secondToLast.y;\n        }\n        else {\n            controlX = this.lastX;\n            controlY = this.lastY;\n        }\n\n        this.addShape(this.shapeCreator.cubicBezier(\n            this.lastX, this.lastY,\n            controlX, controlY,\n            x2, y2,\n            x, y\n        ));\n\n        this.lastX = x;\n        this.lastY = y;\n        this.lastCommand = \"S\";\n    }\n\n    /**\n     *  curvetoCubicSmoothRel - s\n     *\n     *  @param {number} x2\n     *  @param {number} y2\n     *  @param {number} x\n     *  @param {number} y\n     */\n    curvetoCubicSmoothRel(x2, y2, x, y) {\n        let controlX, controlY;\n\n        if (this.lastCommand.match(/^[SsCc]$/)) {\n            const secondToLast = this.shapes[this.shapes.length - 1].args[2];\n\n            controlX = 2 * this.lastX - secondToLast.x;\n            controlY = 2 * this.lastY - secondToLast.y;\n        }\n        else {\n            controlX = this.lastX;\n            controlY = this.lastY;\n        }\n\n        this.addShape(this.shapeCreator.cubicBezier(\n            this.lastX, this.lastY,\n            controlX, controlY,\n            this.lastX + x2, this.lastY + y2,\n            this.lastX + x, this.lastY + y\n        ));\n\n        this.lastX += x;\n        this.lastY += y;\n        this.lastCommand = \"s\";\n    }\n\n    /**\n     *  curvetoQuadraticSmoothAbs - T\n     *\n     *  @param {number} x\n     *  @param {number} y\n     */\n    curvetoQuadraticSmoothAbs(x, y) {\n        let controlX, controlY;\n\n        if (this.lastCommand.match(/^[QqTt]$/)) {\n            const secondToLast = this.shapes[this.shapes.length - 1].args[1];\n\n            controlX = 2 * this.lastX - secondToLast.x;\n            controlY = 2 * this.lastY - secondToLast.y;\n        }\n        else {\n            controlX = this.lastX;\n            controlY = this.lastY;\n        }\n\n        this.addShape(this.shapeCreator.quadraticBezier(\n            this.lastX, this.lastY,\n            controlX, controlY,\n            x, y\n        ));\n\n        this.lastX = x;\n        this.lastY = y;\n        this.lastCommand = \"T\";\n    }\n\n    /**\n     *  curvetoQuadraticSmoothRel - t\n     *\n     *  @param {number} x\n     *  @param {number} y\n     */\n    curvetoQuadraticSmoothRel(x, y) {\n        let controlX, controlY;\n\n        if (this.lastCommand.match(/^[QqTt]$/)) {\n            const secondToLast = this.shapes[this.shapes.length - 1].args[1];\n\n            controlX = 2 * this.lastX - secondToLast.x;\n            controlY = 2 * this.lastY - secondToLast.y;\n        }\n        else {\n            controlX = this.lastX;\n            controlY = this.lastY;\n        }\n\n        this.addShape(this.shapeCreator.quadraticBezier(\n            this.lastX, this.lastY,\n            controlX, controlY,\n            this.lastX + x, this.lastY + y\n        ));\n\n        this.lastX += x;\n        this.lastY += y;\n        this.lastCommand = \"t\";\n    }\n\n    /**\n     *  linetoVerticalAbs - V\n     *\n     *  @param {number} y\n     */\n    linetoVerticalAbs(y) {\n        this.addShape(this.shapeCreator.line(\n            this.lastX, this.lastY,\n            this.lastX, y\n        ));\n\n        this.lastY = y;\n\n        this.lastCommand = \"V\";\n    }\n\n    /**\n     *  linetoVerticalRel - v\n     *\n     *  @param {number} y\n     */\n    linetoVerticalRel(y) {\n        this.addShape(this.shapeCreator.line(\n            this.lastX, this.lastY,\n            this.lastX, this.lastY + y\n        ));\n\n        this.lastY += y;\n\n        this.lastCommand = \"v\";\n    }\n\n    /**\n     *  closePath - z or Z\n     */\n    closePath() {\n        this.addShape(this.shapeCreator.line(\n            this.lastX, this.lastY,\n            this.firstX, this.firstY\n        ));\n\n        this.lastX = this.firstX;\n        this.lastY = this.firstY;\n        this.lastCommand = \"z\";\n    }\n}\n\nexport default PathHandler;\n","/**\n *  ShapeInfo.js\n *  @copyright 2002, 2017 Kevin Lindsey\n */\n\nimport {Point2D} from \"kld-affine\";\nimport {PathParser} from \"kld-path-parser\";\nimport PathHandler from \"./PathHandler.js\";\n\nconst degree90 = Math.PI * 0.5;\nconst parser = new PathParser();\n\n\n/**\n * getValues\n *\n * @param {Array} types\n * @param {Array} args\n * @returns {Array}\n */\nexport function getValues(types, args) {\n    const result = [];\n\n    for (const [names, type] of types) {\n        let value = null;\n\n        if (type === \"Point2D\") {\n            value = parsePoint(names, args);\n        }\n        else if (type === \"Number\") {\n            value = parseNumber(names, args);\n        }\n        else if (type === \"Array<Point2D>\" || type === \"Point2D[]\") {\n            const values = [];\n\n            while (args.length > 0) {\n                values.push(parsePoint(names, args));\n            }\n\n            if (values.length > 0) {\n                value = values;\n            }\n        }\n        else if (type === \"Optional<Number>\" || type === \"Number?\") {\n            value = parseNumber(names, args);\n\n            if (value === null) {\n                value = undefined;\n            }\n        }\n        else {\n            throw new TypeError(`Unrecognized value type: ${type}`);\n        }\n\n        if (value !== null) {\n            result.push(value);\n        }\n        else {\n            throw new TypeError(`Unable to extract value for ${names}`);\n        }\n    }\n\n    return result;\n}\n\n/**\n * parseNumber\n *\n * @param {Array} names\n * @param {Array} args\n * @returns {number}\n */\nexport function parseNumber(names, args) {\n    let result = null;\n\n    if (args.length > 0) {\n        const item = args[0];\n        const itemType = typeof item;\n\n        if (itemType === \"number\") {\n            return args.shift();\n        }\n        else if (itemType === \"object\") {\n            for (const prop of names) {\n                if (prop in item && typeof item[prop] === \"number\") {\n                    result = item[prop];\n                    break;\n                }\n            }\n        }\n    }\n\n    return result;\n}\n\n/**\n * parsePoint\n *\n * @param {Array} names\n * @param {Array} args\n * @returns {Array}\n */\nexport function parsePoint(names, args) {\n    let result = null;\n\n    if (args.length > 0) {\n        const item = args[0];\n        const itemType = typeof item;\n\n        if (itemType === \"number\") {\n            if (args.length > 1) {\n                const x = args.shift();\n                const y = args.shift();\n\n                result = new Point2D(x, y);\n            }\n        }\n        else if (Array.isArray(item) && item.length > 1) {\n            if (item.length === 2) {\n                const [x, y] = args.shift();\n\n                result = new Point2D(x, y);\n            }\n            else {\n                throw new TypeError(`Unhandled array of length ${item.length}`);\n            }\n        }\n        else if (itemType === \"object\") {\n            if (\"x\" in item && \"y\" in item) {\n                result = new Point2D(item.x, item.y);\n                args.shift();\n            }\n            else {\n                for (const props of names) {\n                    if (Array.isArray(props)) {\n                        if (props.every(p => p in item)) {\n                            result = new Point2D(item[props[0]], item[props[1]]);\n                            break;\n                        }\n                    }\n                    else if (props in item) {\n                        result = parsePoint([], [item[props]]);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}\n\n/**\n *  ShapeInfo\n *  @memberof module:kld-intersections\n */\nexport default class ShapeInfo {\n    /**\n     *  @param {string} name\n     *  @param {Array} args\n     *  @returns {module:kld-intersections.ShapeInfo}\n     */\n    constructor(name, args) {\n        this.name = name;\n        this.args = args;\n    }\n\n    static arc(...args) {\n        const types = [\n            [[\"center\", [\"centerX\", \"centerY\"], [\"cx\", \"cy\"]], \"Point2D\"],\n            [[\"radiusX\", \"rx\"], \"Number\"],\n            [[\"radiusY\", \"ry\"], \"Number\"],\n            [[\"startRadians\"], \"Number\"],\n            [[\"endRadians\"], \"Number\"]\n        ];\n        const values = getValues(types, args);\n\n        return new ShapeInfo(ShapeInfo.ARC, values);\n    }\n\n    static quadraticBezier(...args) {\n        const types = [\n            [[\"p1\", [\"p1x\", \"p1y\"]], \"Point2D\"],\n            [[\"p2\", [\"p2x\", \"p2y\"]], \"Point2D\"],\n            [[\"p3\", [\"p3x\", \"p3y\"]], \"Point2D\"]\n        ];\n        const values = getValues(types, args);\n\n        return new ShapeInfo(ShapeInfo.QUADRATIC_BEZIER, values);\n    }\n\n    static cubicBezier(...args) {\n        const types = [\n            [[\"p1\", [\"p1x\", \"p1y\"]], \"Point2D\"],\n            [[\"p2\", [\"p2x\", \"p2y\"]], \"Point2D\"],\n            [[\"p3\", [\"p3x\", \"p3y\"]], \"Point2D\"],\n            [[\"p4\", [\"p4x\", \"p4y\"]], \"Point2D\"]\n        ];\n        const values = getValues(types, args);\n\n        return new ShapeInfo(ShapeInfo.CUBIC_BEZIER, values);\n    }\n\n    static circle(...args) {\n        const types = [\n            [[\"center\", [\"centerX\", \"centerY\"], [\"cx\", \"cy\"]], \"Point2D\"],\n            [[\"radius\", \"r\"], \"Number\"]\n        ];\n        const values = getValues(types, args);\n\n        return new ShapeInfo(ShapeInfo.CIRCLE, values);\n    }\n\n    static ellipse(...args) {\n        const types = [\n            [[\"center\", [\"centerX\", \"centerY\"], [\"cx\", \"cy\"]], \"Point2D\"],\n            [[\"radiusX\", \"rx\"], \"Number\"],\n            [[\"radiusY\", \"ry\"], \"Number\"]\n        ];\n        const values = getValues(types, args);\n\n        return new ShapeInfo(ShapeInfo.ELLIPSE, values);\n    }\n\n    static line(...args) {\n        const types = [\n            [[\"p1\", [\"p1x\", \"p1y\"], [\"x1\", \"y1\"]], \"Point2D\"],\n            [[\"p2\", [\"p2x\", \"p2y\"], [\"x2\", \"y2\"]], \"Point2D\"]\n        ];\n        const values = getValues(types, args);\n\n        return new ShapeInfo(ShapeInfo.LINE, values);\n    }\n\n    static path(...args) {\n        parser.parseData(args[0]);\n\n        return new ShapeInfo(ShapeInfo.PATH, handler.shapes);\n    }\n\n    static polygon(...args) {\n        const types = [\n            [[], \"Array<Point2D>\"]\n        ];\n        const values = getValues(\n            types,\n            args.length === 1 && Array.isArray(args[0]) ? args[0] : args\n        );\n\n        return new ShapeInfo(ShapeInfo.POLYGON, values);\n    }\n\n    static polyline(...args) {\n        const types = [\n            [[], \"Array<Point2D>\"]\n        ];\n        const values = getValues(\n            types,\n            args.length === 1 && Array.isArray(args[0]) ? args[0] : args\n        );\n\n        return new ShapeInfo(ShapeInfo.POLYLINE, values);\n    }\n\n    static rectangle(...args) {\n        const types = [\n            [[\"topLeft\", [\"x\", \"y\"], [\"left\", \"top\"]], \"Point2D\"],\n            [[\"size\", [\"width\", \"height\"], [\"w\", \"h\"]], \"Point2D\"],\n            [[\"radiusX\", \"rx\"], \"Optional<Number>\"],\n            [[\"radiusY\", \"ry\"], \"Optional<Number>\"]\n        ];\n        const values = getValues(types, args);\n\n        // fix up bottom-right point\n        const p1 = values[0];\n        const p2 = values[1];\n        values[1] = new Point2D(p1.x + p2.x, p1.y + p2.y);\n\n        // create shape info\n        const result = new ShapeInfo(ShapeInfo.RECTANGLE, values);\n\n        // handle possible rounded rectangle values\n        let ry = result.args.pop();\n        let rx = result.args.pop();\n\n        rx = rx === undefined ? 0 : rx;\n        ry = ry === undefined ? 0 : ry;\n\n        if (rx === 0 && ry === 0) {\n            return result;\n        }\n\n        const {x: p1x, y: p1y} = result.args[0];\n        const {x: p2x, y: p2y} = result.args[1];\n        const width = p2x - p1x;\n        const height = p2y - p1y;\n\n        if (rx === 0) {\n            rx = ry;\n        }\n        if (ry === 0) {\n            ry = rx;\n        }\n        if (rx > width * 0.5) {\n            rx = width * 0.5;\n        }\n        if (ry > height * 0.5) {\n            ry = height * 0.5;\n        }\n\n        const x0 = p1x;\n        const y0 = p1y;\n        const x1 = p1x + rx;\n        const y1 = p1y + ry;\n        const x2 = p2x - rx;\n        const y2 = p2y - ry;\n        const x3 = p2x;\n        const y3 = p2y;\n\n        const segments = [\n            ShapeInfo.arc(x1, y1, rx, ry, 2 * degree90, 3 * degree90),\n            ShapeInfo.line(x1, y0, x2, y0),\n            ShapeInfo.arc(x2, y1, rx, ry, 3 * degree90, 4 * degree90),\n            ShapeInfo.line(x3, y1, x3, y2),\n            ShapeInfo.arc(x2, y2, rx, ry, 0, degree90),\n            ShapeInfo.line(x2, y3, x1, y3),\n            ShapeInfo.arc(x1, y2, rx, ry, degree90, 2 * degree90),\n            ShapeInfo.line(x0, y2, x0, y1)\n        ];\n\n        return new ShapeInfo(ShapeInfo.PATH, segments);\n    }\n}\n\n// define shape name constants\nShapeInfo.ARC = \"Arc\";\nShapeInfo.QUADRATIC_BEZIER = \"Bezier2\";\nShapeInfo.CUBIC_BEZIER = \"Bezier3\";\nShapeInfo.CIRCLE = \"Circle\";\nShapeInfo.ELLIPSE = \"Ellipse\";\nShapeInfo.LINE = \"Line\";\nShapeInfo.PATH = \"Path\";\nShapeInfo.POLYGON = \"Polygon\";\nShapeInfo.POLYLINE = \"Polyline\";\nShapeInfo.RECTANGLE = \"Rectangle\";\n\n// setup path parser handler after ShapeInfo has been defined\nconst handler = new PathHandler(ShapeInfo);\n\nparser.setHandler(handler);\n","/**\n *\n *  IntersectionQuery.js\n *\n *  @copyright 2017 Kevin Lindsey\n * @module IntersectionQuery\n */\n\nimport {Vector2D} from \"kld-affine\";\n\n/**\n * @namespace\n */\nconst IntersectionQuery = {};\n\n\n/**\n *  pointInCircle\n *\n *  @param {module:kld-intersections.Point2D} point\n *  @param {module:kld-intersections.Point2D} center\n *  @param {number} radius\n *  @returns {boolean}\n */\nIntersectionQuery.pointInCircle = function(point, center, radius) {\n    const v = Vector2D.fromPoints(center, point);\n\n    return v.length() <= radius;\n};\n\n\n/**\n *  pointInEllipse\n *\n *  @param {module:kld-intersections.Point2D} point\n *  @param {module:kld-intersections.Point2D} center\n *  @param {number} radiusX\n *  @param {number} radiusY\n *  @returns {boolean}\n */\nIntersectionQuery.pointInEllipse = function(point, center, radiusX, radiusY) {\n    const len = point.subtract(center);\n\n    return (len.x * len.x) / (radiusX * radiusX) + (len.y * len.y) / (radiusY * radiusY) <= 1;\n};\n\n\n/**\n *  pointInPolyline\n *\n *  @param {module:kld-intersections.Point2D} point\n *  @param {Array<module:kld-intersections.Point2D>} points\n */\nIntersectionQuery.pointInPolyline = function(point, points) {\n    const {length: len} = points;\n    let counter = 0;\n    let xInter;\n\n    let p1 = points[0];\n\n    for (let i = 1; i <= len; i++) {\n        const p2 = points[i % len];\n        const minY = Math.min(p1.y, p2.y);\n        const maxY = Math.max(p1.y, p2.y);\n        const maxX = Math.max(p1.x, p2.x);\n\n        if (p1.y !== p2.y && minY < point.y && point.y <= maxY && point.x <= maxX) {\n            xInter = (point.y - p1.y) * (p2.x - p1.x) / (p2.y - p1.y) + p1.x;\n\n            if (p1.x === p2.x || point.x <= xInter) {\n                counter++;\n            }\n        }\n\n        p1 = p2;\n    }\n\n    return (counter % 2 === 1);\n};\n\n\n/**\n *  pointInPolyline\n *\n *  @param {module:kld-intersections.Point2D} point\n *  @param {Array<module:kld-intersections.Point2D>} points\n */\nIntersectionQuery.pointInPolygon = IntersectionQuery.pointInPolyline;\n\n\n/**\n *  pointInRectangle\n *\n *  @param {module:kld-intersections.Point2D} point\n *  @param {module:kld-intersections.Point2D} topLeft\n *  @param {module:kld-intersections.Point2D} bottomRight\n *  @returns {boolean}\n */\nIntersectionQuery.pointInRectangle = function(point, topLeft, bottomRight) {\n    return (\n        topLeft.x <= point.x && point.x < bottomRight.x &&\n        topLeft.y <= point.y && point.y < bottomRight.y\n    );\n};\n\n\nexport default IntersectionQuery;\n"],"names":["Vector2D","x","y","p1","p2","that","scalar","cos","radians","percent","matrix","precision","window","document","undefined","_MAP","_KEYCODE_MAP","_SHIFT_MAP","_SPECIAL_ALIASES","_REVERSE_MAP","i","_addEvent","object","type","callback","_characterFromEvent","e","character","_modifiersMatch","modifiers1","modifiers2","_eventModifiers","modifiers","_preventDefault","_stopPropagation","_isModifier","key","_getReverseMap","_pickBestAction","action","_keysFromString","combination","_getKeyInfo","keys","_belongsTo","element","ancestor","Mousetrap","targetElement","self","_sequenceLevels","_resetTimer","_ignoreNextKeyup","_ignoreNextKeypress","_nextExpectedAction","_resetSequences","doNotReset","activeSequences","_getMatches","sequenceName","level","matches","deleteCombo","deleteSequence","_fireCallback","combo","sequence","callbacks","maxLevel","processedSequenceCallback","ignoreThisKeypress","_handleKeyEvent","_resetSequenceTimer","_bindSequence","_increaseSequence","nextAction","_callbackAndReset","isFinal","wrappedCallback","_bindSingle","info","combinations","initialEventTarget","documentMousetrap","method","module","define","createStateHook","mousetraps","bindKeys","nextKeys","k","addKeys","removeKeys","_a","_b","state","setState","useState","useEffect","useHotkeyState","useHotkeys","shortcuts","useLayoutEffect","useMemo","agg","cur","a","isMac","root","factory","this","modules","installedModules","__webpack_require__","moduleId","exports","name","getter","property","_typeof","obj","deepCopy","defaulty","targetObj","defaultObj","exclude","copy","_len","args","_key","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","target","walk","value","add","last","PathLexeme","text","PathLexer","pathData","result","d","BOP","PathParser","lexer","mode","lastToken","token","parameterCount","params","handler","methodName","TWO_PI","getArcParameters","startPoint","endPoint","rx","ry","angle","arcFlag","sweepFlag","c","s","TOLERANCE","halfDiff","x1p","y1p","x1px1p","y1py1p","lambda","factor","rxrx","ryry","rxy1","ryx1","sq","mid","cxp","cyp","xcr1","xcr2","ycr1","ycr2","theta1","deltaTheta","PathHandler","shapeCreator","shape","xAxisRotation","arcParameters","Point2D","x1","y1","x2","y2","controlX","controlY","secondToLast","degree90","parser","getValues","types","names","parsePoint","parseNumber","values","item","itemType","prop","props","p","ShapeInfo","p1x","p1y","p2x","p2y","width","height","x0","y0","x3","y3","segments","IntersectionQuery","point","center","radius","radiusX","radiusY","len","points","counter","xInter","minY","maxY","maxX","topLeft","bottomRight"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}