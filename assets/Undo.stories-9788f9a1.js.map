{"version":3,"file":"Undo.stories-9788f9a1.js","sources":["../../node_modules/undoo/node_modules/fast-deep-equal/index.js","../../node_modules/undoo/src/undoo.js","../../node_modules/undoo/index.js","../../src/helpers/useUndo.ts"],"sourcesContent":["'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  var arrA = isArray(a)\n    , arrB = isArray(b)\n    , i\n    , length\n    , key;\n\n  if (arrA && arrB) {\n    length = a.length;\n    if (length != b.length) return false;\n    for (i = 0; i < length; i++)\n      if (!equal(a[i], b[i])) return false;\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n\n  var dateA = a instanceof Date\n    , dateB = b instanceof Date;\n  if (dateA != dateB) return false;\n  if (dateA && dateB) return a.getTime() == b.getTime();\n\n  var regexpA = a instanceof RegExp\n    , regexpB = b instanceof RegExp;\n  if (regexpA != regexpB) return false;\n  if (regexpA && regexpB) return a.toString() == b.toString();\n\n  if (a instanceof Object && b instanceof Object) {\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = 0; i < length; i++)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n","const extend = require('defaulty');\r\nconst isEqual = require('fast-deep-equal');\r\n\r\n/**\r\n * @class\r\n */\r\nclass Undoo {\r\n\r\n    /**\r\n     * Create instance\r\n     * @param [opts] {Object} configuration object\r\n     * @param [opts.provider=null] {Function} optional function called on save that returns new state for history\r\n     * @param [opts.maxLength=20] {number} max length history\r\n     */\r\n    constructor(opts) {\r\n\r\n        Object.defineProperties(this, {\r\n            _opts: {\r\n                writable: true\r\n            },\r\n            _history: {\r\n                writable: true\r\n            },\r\n            _position: {\r\n                writable: true\r\n            },\r\n            _initialState: {\r\n                writable: true\r\n            },\r\n            _onUpdate: {\r\n                writable: true,\r\n                value: ()=>{}\r\n            },\r\n            _onBeforeSave: {\r\n                writable: true,\r\n                value: ()=>{}\r\n            },\r\n            _onMaxLength: {\r\n                writable: true,\r\n                value: ()=>{}\r\n            },\r\n            _isExceeded: {\r\n                writable: true,\r\n                value: false\r\n            },\r\n            _suspendSave: {\r\n                writable: true,\r\n                value: false\r\n            }\r\n        });\r\n\r\n        this._opts = extend.copy(opts, {\r\n            provider: null,\r\n            maxLength: 20\r\n        });\r\n\r\n        this._initiliaze();\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @private\r\n     */\r\n    _initiliaze() {\r\n        this._initialState = undefined;\r\n        this._history = [];\r\n        this._isExceeded = false;\r\n        this._position = 0;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @private\r\n     */\r\n    _checkMaxLength() {\r\n        if (this._history.length > this._opts.maxLength) {\r\n            this._history = this._history.slice(1, this._history.length);\r\n            if (!this._isExceeded) {\r\n                this._onMaxLength.call(null, this.current(), this.history(), this);\r\n                this._isExceeded = true;\r\n            }\r\n        } else {\r\n            this._isExceeded = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param item\r\n     * @param beforeSave\r\n     * @returns {boolean|*}\r\n     * @private\r\n     * @ignore\r\n     */\r\n    _rejectSave(item, beforeSave) {\r\n        return isEqual(item, this.current()) || beforeSave === false || this._suspendSave;\r\n    }\r\n\r\n    /**\r\n     * Check if undo is available\r\n     * @returns {boolean}\r\n     */\r\n    canUndo() {\r\n        return this._position > 1;\r\n    }\r\n\r\n    /**\r\n     * @Check if redo is available\r\n     * @returns {boolean}\r\n     */\r\n    canRedo() {\r\n        return this._position < this._history.length;\r\n    }\r\n\r\n    /**\r\n     * ignore\r\n     * @param callback\r\n     * @private\r\n     */\r\n    static callbackError(callback) {\r\n        if (typeof callback !== 'function')\r\n            throw new TypeError('callback must be a function');\r\n    }\r\n\r\n    /**\r\n     * Import external history\r\n     * @param history {Array}\r\n     * @returns {Undoo}\r\n     */\r\n    import(history = []) {\r\n        if(!Array.isArray(history))\r\n            throw new TypeError('Items must be an array');\r\n        this._initiliaze();\r\n        this._history = history;\r\n        this._position = this._history.length;\r\n        this._initialState = history[0];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get history\r\n     * @returns {Array}\r\n     */\r\n    history() {\r\n        return this._history;\r\n    }\r\n\r\n    /**\r\n     * Save history\r\n     * @param [item] {*}\r\n     * @returns {Undoo}\r\n     */\r\n    save(item) {\r\n\r\n        if (typeof item === 'undefined' && typeof this._opts.provider === 'function')\r\n            item = this._opts.provider();\r\n\r\n        let beforeSave = this._onBeforeSave.call(null, item, this);\r\n\r\n        item = beforeSave || item;\r\n\r\n        if (this._rejectSave(item, beforeSave))\r\n            return this;\r\n\r\n        if (this._position < this._history.length)\r\n            this._history = this._history.slice(0, this._position);\r\n\r\n        if (typeof item !== 'undefined') {\r\n            this._history.push(item);\r\n            if (this._initialState === undefined)\r\n                this._initialState = item;\r\n        }\r\n\r\n        this._checkMaxLength();\r\n        this._position = this._history.length;\r\n        this._onUpdate.call(null, this.current(), 'save', this.history(), this);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Suspend save method\r\n     * @param [state=true] {boolean}\r\n     * @returns {Undoo}\r\n     */\r\n    suspendSave(state = true) {\r\n        this._suspendSave = state;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Check if save is allowed\r\n     * @returns {boolean}\r\n     */\r\n    allowedSave() {\r\n        return !this._suspendSave;\r\n    }\r\n\r\n    /**\r\n     * Clear history\r\n     * @returns {Undoo}\r\n     */\r\n    clear() {\r\n        this._initiliaze();\r\n        this._onUpdate.call(null, null, 'clear', this.history(), this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * undo callback\r\n     * @callback Undoo~undoCallback\r\n     * @param item {*} current history item\r\n     */\r\n\r\n    /**\r\n     * Undo\r\n     * @param [callback] {Undoo~undoCallback} callback function\r\n     * @returns {Undoo}\r\n     */\r\n    undo(callback) {\r\n        if (this.canUndo()) {\r\n            this._position--;\r\n            if (typeof callback === 'function')\r\n                callback(this.current());\r\n            this._onUpdate.call(null, this.current(), 'undo', this.history(), this);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * redo callback\r\n     * @callback Undoo~redoCallback\r\n     * @param item {*} current history item\r\n     */\r\n\r\n    /**\r\n     * Redo\r\n     * @param [callback] {Undoo~redoCallback} callback function\r\n     * @returns {Undoo}\r\n     */\r\n    redo(callback) {\r\n        if (this.canRedo()) {\r\n            this._position++;\r\n            if (typeof callback === 'function')\r\n                callback(this.current());\r\n            this._onUpdate.call(null, this.current(), 'redo', this.history(), this);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get current item in history\r\n     * @returns {*}\r\n     */\r\n    current() {\r\n        return this._history.length ? this._history[this._position - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Count history items, the first element is not considered\r\n     * @returns {number}\r\n     */\r\n    count() {\r\n        return this._history.length ? this._history.length - 1 : 0;\r\n    }\r\n\r\n    /**\r\n     * Get initial state history\r\n     * @returns {*}\r\n     */\r\n    initialState() {\r\n        return this._initialState;\r\n    }\r\n\r\n    /**\r\n     * onUpdate callback\r\n     * @callback Undoo~updateCallback\r\n     * @param item {*} current history item\r\n     * @param action {string} action that has called update event. Can be: redo, undo, save, clear\r\n     * @param history {Array} history array\r\n     * @param istance {Undoo}\r\n     */\r\n\r\n    /**\r\n     * Triggered when history is updated\r\n     * @param callback {Undoo~updateCallback} callback function\r\n     * @returns {Undoo}\r\n     */\r\n    onUpdate(callback) {\r\n        Undoo.callbackError(callback);\r\n        this._onUpdate = callback;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * onMaxLength callback\r\n     * @callback Undoo~maxLengthCallback\r\n     * @param item {*} current history item\r\n     * @param history {Array} history array\r\n     * @param istance {Undoo}\r\n     */\r\n\r\n    /**\r\n     * Triggered when maxLength is exceeded\r\n     * @param callback {Undoo~maxLengthCallback} callback function\r\n     * @returns {Undoo}\r\n     */\r\n    onMaxLength(callback) {\r\n        Undoo.callbackError(callback);\r\n        this._onMaxLength = callback;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * onBeforeSave callback\r\n     * @callback Undoo~beforeSaveCallback\r\n     * @param item {*} current history item\r\n     * @param istance {Undoo}\r\n     */\r\n\r\n    /**\r\n     * Triggered before save\r\n     * @param callback {Undoo~beforeSaveCallback} callback function\r\n     * @returns {Undoo}\r\n     * @example\r\n     * // If callback returns `false` the save command will not be executed\r\n     * myHistory.onBeforeSave(()=>false)\r\n     *\r\n     * // You can overwrite item before save\r\n     * myHistory.onBeforeSave((item)=>{\r\n     *      return item.toUpperCase();\r\n     * })\r\n     */\r\n    onBeforeSave(callback) {\r\n        Undoo.callbackError(callback);\r\n        this._onBeforeSave = callback;\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Undoo;","module.exports = require('./src/undoo');","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useHotkeys } from 'reakeys';\nimport { EdgeData, NodeData } from '../types';\nimport Undoo from 'undoo';\n\nexport interface UndoRedoEvent {\n  /**\n   * Updated node datas.\n   */\n  nodes?: NodeData[];\n\n  /**\n   * Updated edge datas.\n   */\n  edges?: EdgeData[];\n\n  /**\n   * Type of change.\n   */\n  type: 'undo' | 'redo' | 'clear';\n\n  /**\n   * Whether you can undo now.\n   */\n  canUndo: boolean;\n\n  /**\n   * Whether you can redo now.\n   */\n  canRedo: boolean;\n}\n\nexport interface UndoProps {\n  /**\n   * Current node datas.\n   */\n  nodes: NodeData[];\n\n  /**\n   * Current edge datas.\n   */\n  edges: EdgeData[];\n\n  /**\n   * Max history count.\n   *\n   * @default 20\n   */\n  maxHistory?: number;\n\n  /**\n   * Disabled or not.\n   *\n   * @default false\n   */\n  disabled?: boolean;\n\n  /**\n   * On undo/redo event handler.\n   */\n  onUndoRedo: (state: UndoRedoEvent) => void;\n}\n\nexport interface UndoResult {\n  /**\n   * Can undo or not.\n   */\n  canUndo: boolean;\n\n  /**\n   * Can redo or not.\n   */\n  canRedo: boolean;\n\n  /**\n   * Count of existing changes.\n   */\n  count: () => number;\n\n  /**\n   * Clear state.\n   */\n  clear: (nodes: NodeData[], edges: EdgeData[]) => void;\n\n  /**\n   * Get history of state.\n   */\n  history: () => { nodes: NodeData[]; edges: EdgeData[] }[];\n\n  /**\n   * Perform an redo.\n   */\n  redo: () => void;\n\n  /**\n   * Perform a undo.\n   */\n  undo: () => void;\n}\n\nexport const useUndo = ({\n  nodes,\n  edges,\n  disabled,\n  maxHistory = 20,\n  onUndoRedo\n}: UndoProps): UndoResult => {\n  const [canUndo, setCanUndo] = useState<boolean>(false);\n  const [canRedo, setCanRedo] = useState<boolean>(false);\n\n  const manager = useRef<Undoo>(\n    new Undoo({\n      maxLength: maxHistory\n    })\n  );\n\n  // Reference: https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n  const callbackRef = useRef(onUndoRedo);\n  useEffect(() => {\n    callbackRef.current = onUndoRedo;\n  }, [onUndoRedo]);\n\n  useEffect(() => {\n    manager.current.save({\n      nodes,\n      edges\n    });\n\n    setCanUndo(manager.current.canUndo());\n    setCanRedo(manager.current.canRedo());\n  }, [nodes, edges]);\n\n  const undo = useCallback(() => {\n    manager.current.undo((state) => {\n      const nextUndo = manager.current.canUndo();\n      const nextRedo = manager.current.canRedo();\n      setCanUndo(nextUndo);\n      setCanRedo(nextRedo);\n\n      callbackRef.current({\n        ...state,\n        type: 'undo',\n        canUndo: nextUndo,\n        canRedo: nextRedo\n      });\n    });\n  }, []);\n\n  const redo = useCallback(() => {\n    manager.current.redo((state) => {\n      const nextUndo = manager.current.canUndo();\n      const nextRedo = manager.current.canRedo();\n      setCanUndo(nextUndo);\n      setCanRedo(nextRedo);\n\n      callbackRef.current({\n        ...state,\n        type: 'redo',\n        canUndo: nextUndo,\n        canRedo: nextRedo\n      });\n    });\n  }, []);\n\n  const clear = useCallback((nodes: NodeData[], edges: EdgeData[]) => {\n    manager.current.clear();\n    setCanUndo(false);\n    setCanRedo(false);\n\n    callbackRef.current({\n      type: 'clear',\n      canUndo: false,\n      canRedo: false\n    });\n\n    manager.current.save({\n      nodes,\n      edges\n    });\n  }, []);\n\n  useHotkeys([\n    {\n      name: 'Undo',\n      keys: 'mod+z',\n      category: 'Canvas',\n      description: 'Undo changes',\n      callback: (event) => {\n        event.preventDefault();\n        if (!disabled && canUndo) {\n          undo();\n        }\n      }\n    },\n    {\n      name: 'Redo',\n      keys: 'mod+shift+z',\n      category: 'Canvas',\n      description: 'Redo changes',\n      callback: (event) => {\n        event.preventDefault();\n        if (!disabled && canRedo) {\n          redo();\n        }\n      }\n    }\n  ]);\n\n  return {\n    canUndo,\n    canRedo,\n    count: () => manager.current.count(),\n    history: () => manager.current.history(),\n    clear,\n    redo,\n    undo\n  } as UndoResult;\n};\n"],"names":["isArray","keyList","hasProp","fastDeepEqual","equal","a","b","arrA","arrB","i","length","key","dateA","dateB","regexpA","regexpB","keys","extend","require$$0","isEqual","require$$1","Undoo$1","Undoo","opts","item","beforeSave","callback","history","state","undoo","useUndo","nodes","edges","disabled","maxHistory","onUndoRedo","canUndo","setCanUndo","useState","canRedo","setCanRedo","manager","useRef","callbackRef","useEffect","undo","useCallback","nextUndo","nextRedo","redo","clear","useHotkeys","event"],"mappings":"gUAEA,IAAIA,EAAU,MAAM,QAChBC,EAAU,OAAO,KACjBC,EAAU,OAAO,UAAU,eAE/BC,EAAiB,SAASC,EAAMC,EAAGC,EAAG,CACpC,GAAID,IAAMC,EAAG,MAAO,GAEpB,IAAIC,EAAOP,EAAQK,CAAC,EAChBG,EAAOR,EAAQM,CAAC,EAChBG,EACAC,EACAC,EAEJ,GAAIJ,GAAQC,EAAM,CAEhB,GADAE,EAASL,EAAE,OACPK,GAAUJ,EAAE,OAAQ,MAAO,GAC/B,IAAKG,EAAI,EAAGA,EAAIC,EAAQD,IACtB,GAAI,CAACL,EAAMC,EAAEI,CAAC,EAAGH,EAAEG,CAAC,CAAC,EAAG,MAAO,GACjC,MAAO,EACR,CAED,GAAIF,GAAQC,EAAM,MAAO,GAEzB,IAAII,EAAQP,aAAa,KACrBQ,EAAQP,aAAa,KACzB,GAAIM,GAASC,EAAO,MAAO,GAC3B,GAAID,GAASC,EAAO,OAAOR,EAAE,WAAaC,EAAE,UAE5C,IAAIQ,EAAUT,aAAa,OACvBU,EAAUT,aAAa,OAC3B,GAAIQ,GAAWC,EAAS,MAAO,GAC/B,GAAID,GAAWC,EAAS,OAAOV,EAAE,YAAcC,EAAE,WAEjD,GAAID,aAAa,QAAUC,aAAa,OAAQ,CAC9C,IAAIU,EAAOf,EAAQI,CAAC,EAGpB,GAFAK,EAASM,EAAK,OAEVN,IAAWT,EAAQK,CAAC,EAAE,OACxB,MAAO,GAET,IAAKG,EAAI,EAAGA,EAAIC,EAAQD,IACtB,GAAI,CAACP,EAAQ,KAAKI,EAAGU,EAAKP,CAAC,CAAC,EAAG,MAAO,GAExC,IAAKA,EAAI,EAAGA,EAAIC,EAAQD,IAEtB,GADAE,EAAMK,EAAKP,CAAC,EACR,CAACL,EAAMC,EAAEM,CAAG,EAAGL,EAAEK,CAAG,CAAC,EAAG,MAAO,GAGrC,MAAO,EACR,CAED,MAAO,EACT,ECtDA,MAAMM,EAASC,EACTC,EAAUC,EAKhB,IAAAC,EAAA,MAAMC,CAAM,CAQR,YAAYC,EAAM,CAEd,OAAO,iBAAiB,KAAM,CAC1B,MAAO,CACH,SAAU,EACb,EACD,SAAU,CACN,SAAU,EACb,EACD,UAAW,CACP,SAAU,EACb,EACD,cAAe,CACX,SAAU,EACb,EACD,UAAW,CACP,SAAU,GACV,MAAO,IAAI,CAAE,CAChB,EACD,cAAe,CACX,SAAU,GACV,MAAO,IAAI,CAAE,CAChB,EACD,aAAc,CACV,SAAU,GACV,MAAO,IAAI,CAAE,CAChB,EACD,YAAa,CACT,SAAU,GACV,MAAO,EACV,EACD,aAAc,CACV,SAAU,GACV,MAAO,EACV,CACb,CAAS,EAED,KAAK,MAAQN,EAAO,KAAKM,EAAM,CAC3B,SAAU,KACV,UAAW,EACvB,CAAS,EAED,KAAK,YAAW,CACnB,CAMD,aAAc,CACV,KAAK,cAAgB,OACrB,KAAK,SAAW,GAChB,KAAK,YAAc,GACnB,KAAK,UAAY,CACpB,CAMD,iBAAkB,CACV,KAAK,SAAS,OAAS,KAAK,MAAM,WAClC,KAAK,SAAW,KAAK,SAAS,MAAM,EAAG,KAAK,SAAS,MAAM,EACtD,KAAK,cACN,KAAK,aAAa,KAAK,KAAM,KAAK,QAAS,EAAE,KAAK,UAAW,IAAI,EACjE,KAAK,YAAc,KAGvB,KAAK,YAAc,EAE1B,CAUD,YAAYC,EAAMC,EAAY,CAC1B,OAAON,EAAQK,EAAM,KAAK,QAAO,CAAE,GAAKC,IAAe,IAAS,KAAK,YACxE,CAMD,SAAU,CACN,OAAO,KAAK,UAAY,CAC3B,CAMD,SAAU,CACN,OAAO,KAAK,UAAY,KAAK,SAAS,MACzC,CAOD,OAAO,cAAcC,EAAU,CAC3B,GAAI,OAAOA,GAAa,WACpB,MAAM,IAAI,UAAU,6BAA6B,CACxD,CAOD,OAAOC,EAAU,GAAI,CACjB,GAAG,CAAC,MAAM,QAAQA,CAAO,EACrB,MAAM,IAAI,UAAU,wBAAwB,EAChD,YAAK,YAAW,EAChB,KAAK,SAAWA,EAChB,KAAK,UAAY,KAAK,SAAS,OAC/B,KAAK,cAAgBA,EAAQ,CAAC,EACvB,IACV,CAMD,SAAU,CACN,OAAO,KAAK,QACf,CAOD,KAAKH,EAAM,CAEH,OAAOA,EAAS,KAAe,OAAO,KAAK,MAAM,UAAa,aAC9DA,EAAO,KAAK,MAAM,YAEtB,IAAIC,EAAa,KAAK,cAAc,KAAK,KAAMD,EAAM,IAAI,EAIzD,OAFAA,EAAOC,GAAcD,EAEjB,KAAK,YAAYA,EAAMC,CAAU,EAC1B,MAEP,KAAK,UAAY,KAAK,SAAS,SAC/B,KAAK,SAAW,KAAK,SAAS,MAAM,EAAG,KAAK,SAAS,GAErD,OAAOD,EAAS,MAChB,KAAK,SAAS,KAAKA,CAAI,EACnB,KAAK,gBAAkB,SACvB,KAAK,cAAgBA,IAG7B,KAAK,gBAAe,EACpB,KAAK,UAAY,KAAK,SAAS,OAC/B,KAAK,UAAU,KAAK,KAAM,KAAK,UAAW,OAAQ,KAAK,QAAS,EAAE,IAAI,EAE/D,KACV,CAOD,YAAYI,EAAQ,GAAM,CACtB,YAAK,aAAeA,EACb,IACV,CAMD,aAAc,CACV,MAAO,CAAC,KAAK,YAChB,CAMD,OAAQ,CACJ,YAAK,YAAW,EAChB,KAAK,UAAU,KAAK,KAAM,KAAM,QAAS,KAAK,UAAW,IAAI,EACtD,IACV,CAaD,KAAKF,EAAU,CACX,OAAI,KAAK,YACL,KAAK,YACD,OAAOA,GAAa,YACpBA,EAAS,KAAK,QAAO,CAAE,EAC3B,KAAK,UAAU,KAAK,KAAM,KAAK,UAAW,OAAQ,KAAK,QAAS,EAAE,IAAI,GAEnE,IACV,CAaD,KAAKA,EAAU,CACX,OAAI,KAAK,YACL,KAAK,YACD,OAAOA,GAAa,YACpBA,EAAS,KAAK,QAAO,CAAE,EAC3B,KAAK,UAAU,KAAK,KAAM,KAAK,UAAW,OAAQ,KAAK,QAAS,EAAE,IAAI,GAEnE,IACV,CAMD,SAAU,CACN,OAAO,KAAK,SAAS,OAAS,KAAK,SAAS,KAAK,UAAY,CAAC,EAAI,IACrE,CAMD,OAAQ,CACJ,OAAO,KAAK,SAAS,OAAS,KAAK,SAAS,OAAS,EAAI,CAC5D,CAMD,cAAe,CACX,OAAO,KAAK,aACf,CAgBD,SAASA,EAAU,CACf,OAAAJ,EAAM,cAAcI,CAAQ,EAC5B,KAAK,UAAYA,EACV,IACV,CAeD,YAAYA,EAAU,CAClB,OAAAJ,EAAM,cAAcI,CAAQ,EAC5B,KAAK,aAAeA,EACb,IACV,CAsBD,aAAaA,EAAU,CACnB,OAAAJ,EAAM,cAAcI,CAAQ,EAC5B,KAAK,cAAgBA,EACd,IACV,CAEL,EAEA,IAAAG,EAAiBP,ECrVjBO,EAAiBX,eCoGJY,EAAU,CAAC,CACtB,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,WAAAC,EAAa,GACb,WAAAC,CACF,IAA6B,CAC3B,KAAM,CAACC,EAASC,CAAU,EAAIC,WAAkB,EAAK,EAC/C,CAACC,EAASC,CAAU,EAAIF,WAAkB,EAAK,EAE/CG,EAAUC,EAAA,OACd,IAAIpB,EAAM,CACR,UAAWY,CAAA,CACZ,CAAA,EAIGS,EAAcD,SAAOP,CAAU,EACrCS,EAAAA,UAAU,IAAM,CACdD,EAAY,QAAUR,CAAA,EACrB,CAACA,CAAU,CAAC,EAEfS,EAAAA,UAAU,IAAM,CACdH,EAAQ,QAAQ,KAAK,CACnB,MAAAV,EACA,MAAAC,CAAA,CACD,EAEUK,EAAAI,EAAQ,QAAQ,QAAS,CAAA,EACzBD,EAAAC,EAAQ,QAAQ,QAAS,CAAA,CAAA,EACnC,CAACV,EAAOC,CAAK,CAAC,EAEX,MAAAa,EAAOC,EAAAA,YAAY,IAAM,CACrBL,EAAA,QAAQ,KAAMb,GAAU,CACxB,MAAAmB,EAAWN,EAAQ,QAAQ,QAAQ,EACnCO,EAAWP,EAAQ,QAAQ,QAAQ,EACzCJ,EAAWU,CAAQ,EACnBP,EAAWQ,CAAQ,EAEnBL,EAAY,QAAQ,CAClB,GAAGf,EACH,KAAM,OACN,QAASmB,EACT,QAASC,CAAA,CACV,CAAA,CACF,CACH,EAAG,CAAE,CAAA,EAECC,EAAOH,EAAAA,YAAY,IAAM,CACrBL,EAAA,QAAQ,KAAMb,GAAU,CACxB,MAAAmB,EAAWN,EAAQ,QAAQ,QAAQ,EACnCO,EAAWP,EAAQ,QAAQ,QAAQ,EACzCJ,EAAWU,CAAQ,EACnBP,EAAWQ,CAAQ,EAEnBL,EAAY,QAAQ,CAClB,GAAGf,EACH,KAAM,OACN,QAASmB,EACT,QAASC,CAAA,CACV,CAAA,CACF,CACH,EAAG,CAAE,CAAA,EAECE,EAAQJ,EAAAA,YAAY,CAACf,EAAmBC,IAAsB,CAClES,EAAQ,QAAQ,QAChBJ,EAAW,EAAK,EAChBG,EAAW,EAAK,EAEhBG,EAAY,QAAQ,CAClB,KAAM,QACN,QAAS,GACT,QAAS,EAAA,CACV,EAEDF,EAAQ,QAAQ,KAAK,CACnB,MAAAV,EACA,MAAAC,CAAA,CACD,CACH,EAAG,CAAE,CAAA,EAEM,OAAAmB,EAAA,CACT,CACE,KAAM,OACN,KAAM,QACN,SAAU,SACV,YAAa,eACb,SAAWC,GAAU,CACnBA,EAAM,eAAe,EACjB,CAACnB,GAAYG,GACVS,GAET,CACF,EACA,CACE,KAAM,OACN,KAAM,cACN,SAAU,SACV,YAAa,eACb,SAAWO,GAAU,CACnBA,EAAM,eAAe,EACjB,CAACnB,GAAYM,GACVU,GAET,CACF,CAAA,CACD,EAEM,CACL,QAAAb,EACA,QAAAG,EACA,MAAO,IAAME,EAAQ,QAAQ,MAAM,EACnC,QAAS,IAAMA,EAAQ,QAAQ,QAAQ,EACvC,MAAAS,EACA,KAAAD,EACA,KAAAJ,CAAA,CAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0,1,2]}