{"version":3,"file":"Selection-e6d4970e.js","sources":["../../docs/Helpers/Selection.mdx"],"sourcesContent":["import { Meta, Story } from '@storybook/addon-docs/blocks';\n\n<Meta title=\"Docs/Helpers/Selection\" />\n\n# Selection\n\n---\n\nOut of the box, reaflow supports selection handled either manually or\nsemi-automatic with hotkeys using a hook and [reakeys](https://github.com/reaviz/reakeys).\n\n## Selection Hook\nThe `useSelection` hooks will automatically manage selection state and hotkeys\nfor you. To set it up, simply import the `useSelection` hook and pass the hook\nthe `nodes`, `edges` and any default selections you like.\n\nThe hook accepts the following:\n\n```ts\nexport interface SelectionProps {\n  /**\n   * Current selections.\n   */\n  selections?: string[];\n\n  /**\n   * Node datas.\n   */\n  nodes?: NodeData[];\n\n  /**\n   * Edge datas.\n   */\n  edges?: EdgeData[];\n\n  /**\n   * Hotkey types.\n   */\n  hotkeys?: HotkeyTypes[];\n\n  /**\n   * Disabled or not.\n   */\n  disabled?: boolean;\n\n  /**\n   * On selection change.\n   */\n  onSelection?: (value: string[]) => void;\n\n  /**\n   * On data change.\n   */\n  onDataChange?: (nodes: NodeData[], edges: EdgeData[]) => void;\n}\n```\n\nand returns the following:\n\n```ts\nexport interface SelectionResult {\n  /**\n   * Selections id array.\n   */\n  selections: string[];\n\n  /**\n   * Clear selections method.\n   */\n  clearSelections: (value?: string[]) => void;\n\n  /**\n   * A selection method.\n   */\n  addSelection: (value: string) => void;\n\n  /**\n   * Remove selection method.\n   */\n  removeSelection: (value: string) => void;\n\n  /**\n   * Toggle existing selection on/off method.\n   */\n  toggleSelection: (value: string) => void;\n\n  /**\n   * Set internal selections.\n   */\n  setSelections: (value: string[]) => void;\n\n  /**\n   * On click event pass through.\n   */\n  onClick?: (\n    event: React.MouseEvent<SVGGElement, MouseEvent>,\n    data: any\n  ) => void;\n\n  /**\n   * On canvas click event pass through.\n   */\n  onCanvasClick?: (event?: React.MouseEvent<SVGGElement, MouseEvent>) => void;\n\n  /**\n   * On keydown event pass through.\n   */\n  onKeyDown?: (event: React.KeyboardEvent<SVGGElement>) => void;\n}\n```\n\nThe hotkeys that are bound via this hook are:\n\n- `ctrl/meta + a`: Select all nodes\n- `escape`: Defoucs selections\n- `ctrl/meta + click`: Toggle node selection\n- `backspace`: Remove selected nodes\n\nBelow is a typical setup of where you define the selection hook.\n\n```ts\nimport { NodeData, EdgeData, useSelection } from 'reaflow';\n\nconst [nodes, setNodes] = useState<NodeData[]>([\n  {\n    id: '1',\n    text: 'Node 1'\n  },\n  {\n    id: '2',\n    text: 'Node 2'\n  }\n]);\n\nconst [edges, setEdges] = useState<EdgeData[]>([\n  {\n    id: '1-2',\n    from: '1',\n    to: '2'\n  }\n]);\n\nconst { selections, onCanvasClick, onClick, onKeyDown, clearSelections } = useSelection({\n  nodes,\n  edges,\n  onDataChange: (n, e) => {\n    console.info('Data changed', n, e);\n    setNodes(n);\n    setEdges(e);\n  },\n  onSelection: (s) => {\n    console.info('Selection', s);\n  }\n});\n```\n\nOnce defined you can pass these onto the canvas like:\n\n```jsx\n<Canvas\n  nodes={nodes}\n  edges={edges}\n  selections={selections}\n  node={\n    <Node\n      onClick={onClick}\n      onKeyDown={onKeyDown}\n      onRemove={(event, node) => {\n        const result = removeAndUpsertNodes(nodes, edges, node);\n        setEdges(result.edges);\n        setNodes(result.nodes);\n        clearSelections();\n      }}\n    />\n  }\n  edge={\n    <Edge\n      onClick={onClick}\n    />\n  }\n  onCanvasClick={onCanvasClick}\n/>\n```\n\nand the hook will handle setting the rest up for you. In the `onSelection`\nblock you can define custom rules for selection as well.\n\n## Manual Selection Management\nIf you don't wish to use the `useSelection` hook you can handle the selections\nyourself manually. This is as simple as defining a state for the selections\nand just passing it on.\n\n```jsx\nimport { NodeData, EdgeData } from 'reaflow';\n\nconst [selections, setSelections] = useState<string[]>([]);\n\nconst [nodes] = useState<NodeData[]>([\n  {\n    id: '1',\n    text: 'Node 1'\n  },\n  {\n    id: '2',\n    text: 'Node 2'\n  }\n]);\n\nconst [edges] = useState<EdgeData[]>([\n  {\n    id: '1-2',\n    from: '1',\n    to: '2'\n  }\n]);\n```\n\nthen similar to how we passed the selections with the hook, we do the same\nthing with the manual selection state.\n\n```jsx\n<Canvas\n  nodes={nodes}\n  edges={edges}\n  selections={selections}\n  node={\n    <Node\n      onClick={(event, node) => {\n        console.log('Selecting Node', event, node);\n        setSelections([node.id]);\n      }}\n    />\n  }\n  edge={\n    <Edge\n      onClick={(event, edge) => {\n        console.log('Selecting Edge', event, edge);\n        setSelections([edge.id]);\n      }}\n    />\n  }\n  onCanvasClick={(event) => {\n    console.log('Canvas Clicked', event);\n    setSelections([]);\n  }}\n  onLayoutChange={layout => console.log('Layout', layout)}\n/>\n```\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","MDXContent","MDXLayout"],"mappings":"0bAIA,SAASA,EAAkBC,EAAO,CAChC,MAAMC,EAAc,OAAO,OAAO,CAChC,GAAI,KACJ,GAAI,KACJ,EAAG,IACH,EAAG,IACH,GAAI,KACJ,KAAM,OACN,IAAK,MACL,GAAI,KACJ,GAAI,IACL,EAAEC,EAAoB,EAAEF,EAAM,UAAU,EACzC,OAAOG,EAAAA,KAAMC,EAAAA,SAAW,CACtB,SAAU,CAACC,EAAI,IAACC,EAAM,CACpB,MAAO,wBACR,CAAA,EAAG;AAAA,EAAMD,MAAKJ,EAAY,GAAI,CAC7B,GAAI,YACJ,SAAU,WACX,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,GAAI,EAAE,EAAG;AAAA,EAAME,EAAAA,KAAMF,EAAY,EAAG,CAC7D,SAAU,CAAC;AAAA,+CAAwHI,MAAKJ,EAAY,EAAG,CACrJ,KAAM,oCACN,OAAQ,SACR,IAAK,+BACL,SAAU,SACX,CAAA,EAAG,GAAG,CACR,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,GAAI,CAC7B,GAAI,iBACJ,SAAU,gBACX,CAAA,EAAG;AAAA,EAAME,OAAMF,EAAY,EAAG,CAC7B,SAAU,CAAC,OAAQI,MAAKJ,EAAY,KAAM,CACxC,SAAU,cACX,CAAA,EAAG;AAAA,2CAA2GI,MAAKJ,EAAY,KAAM,CACpI,SAAU,cACX,CAAA,EAAG;AAAA,MAAiCI,MAAKJ,EAAY,KAAM,CAC1D,SAAU,OACX,CAAA,EAAG,KAAMI,MAAKJ,EAAY,KAAM,CAC/B,SAAU,OACX,CAAA,EAAG,uCAAuC,CAC5C,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,EAAG,CAC5B,SAAU,iCACX,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,IAAK,CAC9B,SAAUI,EAAAA,IAAKJ,EAAY,KAAM,CAC/B,UAAW,cACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,EAAG,CAC5B,SAAU,4BACX,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,IAAK,CAC9B,SAAUI,EAAAA,IAAKJ,EAAY,KAAM,CAC/B,UAAW,cACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,EAAG,CAC5B,SAAU,+CACX,CAAA,EAAG;AAAA,EAAME,OAAMF,EAAY,GAAI,CAC9B,SAAU,CAAC;AAAA,EAAME,OAAMF,EAAY,GAAI,CACrC,SAAU,CAACI,EAAAA,IAAKJ,EAAY,KAAM,CAChC,SAAU,eACX,CAAA,EAAG,oBAAoB,CACzB,CAAA,EAAG;AAAA,EAAME,OAAMF,EAAY,GAAI,CAC9B,SAAU,CAACI,EAAAA,IAAKJ,EAAY,KAAM,CAChC,SAAU,QACX,CAAA,EAAG,sBAAsB,CAC3B,CAAA,EAAG;AAAA,EAAME,OAAMF,EAAY,GAAI,CAC9B,SAAU,CAACI,EAAAA,IAAKJ,EAAY,KAAM,CAChC,SAAU,mBACX,CAAA,EAAG,yBAAyB,CAC9B,CAAA,EAAG;AAAA,EAAME,OAAMF,EAAY,GAAI,CAC9B,SAAU,CAACI,EAAAA,IAAKJ,EAAY,KAAM,CAChC,SAAU,WACX,CAAA,EAAG,yBAAyB,CAC9B,CAAA,EAAG;AAAA,CAAI,CACT,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,EAAG,CAC5B,SAAU,kEACX,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,IAAK,CAC9B,SAAUI,EAAAA,IAAKJ,EAAY,KAAM,CAC/B,UAAW,cACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,EAAG,CAC5B,SAAU,uDACX,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,IAAK,CAC9B,SAAUI,EAAAA,IAAKJ,EAAY,KAAM,CAC/B,UAAW,eACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAME,OAAMF,EAAY,EAAG,CAC7B,SAAU,CAAC,gEAAiEI,MAAKJ,EAAY,KAAM,CACjG,SAAU,aACX,CAAA,EAAG;AAAA,yDAA4D,CACjE,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,GAAI,CAC7B,GAAI,8BACJ,SAAU,6BACX,CAAA,EAAG;AAAA,EAAME,OAAMF,EAAY,EAAG,CAC7B,SAAU,CAAC,gCAAiCI,MAAKJ,EAAY,KAAM,CACjE,SAAU,cACX,CAAA,EAAG;AAAA;AAAA,wBAA2I,CAChJ,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,IAAK,CAC9B,SAAUI,EAAAA,IAAKJ,EAAY,KAAM,CAC/B,UAAW,eACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,EAAG,CAC5B,SAAU;AAAA,uCACX,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,IAAK,CAC9B,SAAUI,EAAAA,IAAKJ,EAAY,KAAM,CAC/B,UAAW,eACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACP,CAAK,CAAC,CACN,CAAG,CACH,CACA,SAASM,EAAWP,EAAQ,GAAI,CAC9B,KAAM,CAAC,QAASQ,CAAS,EAAI,OAAO,OAAO,CAAE,EAAEN,EAAoB,EAAEF,EAAM,UAAU,EACrF,OAAOQ,EAAYH,EAAAA,IAAKG,EAAW,OAAO,OAAO,CAAE,EAAER,EAAO,CAC1D,SAAUK,EAAAA,IAAKN,EAAmBC,CAAK,CAC3C,CAAG,CAAC,EAAID,EAAkBC,CAAK,CAC/B"}