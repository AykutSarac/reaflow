{"version":3,"file":"Selection.stories-6ee536e4.js","sources":["../../src/helpers/useSelection.ts"],"sourcesContent":["import React, { useState } from 'react';\nimport { useHotkeys } from 'reakeys';\nimport { EdgeData, NodeData } from '../types';\nimport { removeNode } from './crudHelpers';\n\nexport type HotkeyTypes = 'selectAll' | 'deselect' | 'delete';\n\nexport interface SelectionProps {\n  /**\n   * Current selections.\n   *\n   * Contains both nodes and edges ids.\n   */\n  selections?: string[];\n\n  /**\n   * Node datas.\n   */\n  nodes?: NodeData[];\n\n  /**\n   * Edge datas.\n   */\n  edges?: EdgeData[];\n\n  /**\n   * Disabled or not.\n   */\n  disabled?: boolean;\n\n  /**\n   * Hotkey types\n   */\n  hotkeys?: HotkeyTypes[];\n\n  /**\n   * On selection change.\n   */\n  onSelection?: (newSelectedIds: string[]) => void;\n\n  /**\n   * On data change.\n   */\n  onDataChange?: (nodes: NodeData[], edges: EdgeData[]) => void;\n}\n\nexport interface SelectionResult {\n  /**\n   * Selections id array (of nodes and edges).\n   */\n  selections: string[];\n\n  /**\n   * Clear selections method.\n   */\n  clearSelections: (value?: string[]) => void;\n\n  /**\n   * A selection method.\n   */\n  addSelection: (value: string) => void;\n\n  /**\n   * Remove selection method.\n   */\n  removeSelection: (value: string) => void;\n\n  /**\n   * Toggle existing selection on/off method.\n   */\n  toggleSelection: (value: string) => void;\n\n  /**\n   * Set internal selections.\n   */\n  setSelections: (value: string[]) => void;\n\n  /**\n   * On click event pass through.\n   */\n  onClick?: (\n    event: React.MouseEvent<SVGGElement, MouseEvent>,\n    data: any\n  ) => void;\n\n  /**\n   * On canvas click event pass through.\n   */\n  onCanvasClick?: (event?: React.MouseEvent<SVGGElement, MouseEvent>) => void;\n\n  /**\n   * On keydown event pass through.\n   */\n  onKeyDown?: (event: React.KeyboardEvent<SVGGElement>) => void;\n}\n\nexport const useSelection = ({\n  selections = [],\n  nodes = [],\n  edges = [],\n  hotkeys = ['selectAll', 'deselect', 'delete'],\n  disabled,\n  onSelection,\n  onDataChange\n}: SelectionProps): SelectionResult => {\n  const [internalSelections, setInternalSelections] =\n    useState<string[]>(selections);\n  const [metaKeyDown, setMetaKeyDown] = useState<boolean>(false);\n\n  const addSelection = (item: string) => {\n    if (!disabled) {\n      const has = internalSelections.includes(item);\n      if (!has) {\n        const next = [...internalSelections, item];\n        onSelection?.(next);\n        setInternalSelections(next);\n      }\n    }\n  };\n\n  const removeSelection = (item: string) => {\n    if (!disabled) {\n      const has = internalSelections.includes(item);\n      if (has) {\n        const next = internalSelections.filter((i) => i !== item);\n        onSelection?.(next);\n        setInternalSelections(next);\n      }\n    }\n  };\n\n  const toggleSelection = (item: string) => {\n    const has = internalSelections.includes(item);\n    if (has) {\n      removeSelection(item);\n    } else {\n      addSelection(item);\n    }\n  };\n\n  const clearSelections = (next = []) => {\n    if (!disabled) {\n      setInternalSelections(next);\n      onSelection?.(next);\n    }\n  };\n\n  const onClick = (event, data) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!metaKeyDown) {\n      clearSelections([data.id]);\n    } else {\n      toggleSelection(data.id);\n    }\n\n    setMetaKeyDown(false);\n  };\n\n  const onKeyDown = (event) => {\n    event.preventDefault();\n    setMetaKeyDown(event.metaKey || event.ctrlKey);\n  };\n\n  const onCanvasClick = () => {\n    clearSelections();\n    setMetaKeyDown(false);\n  };\n\n  useHotkeys([\n    {\n      name: 'Select All',\n      keys: 'mod+a',\n      disabled: !hotkeys.includes('selectAll'),\n      category: 'Canvas',\n      description: 'Select all nodes and edges',\n      callback: (event) => {\n        event.preventDefault();\n\n        if (!disabled) {\n          const next = nodes.map((n) => n.id);\n          onDataChange?.(nodes, edges);\n          onSelection?.(next);\n          setInternalSelections(next);\n        }\n      }\n    },\n    {\n      name: 'Delete Selections',\n      category: 'Canvas',\n      disabled: !hotkeys.includes('delete'),\n      description: 'Delete selected nodes and edges',\n      keys: 'backspace',\n      callback: (event) => {\n        if (!disabled) {\n          event.preventDefault();\n          const result = removeNode(nodes, edges, internalSelections);\n          onDataChange?.(result.nodes, result.edges);\n          onSelection?.([]);\n          setInternalSelections([]);\n        }\n      }\n    },\n    {\n      name: 'Deselect Selections',\n      category: 'Canvas',\n      disabled: !hotkeys.includes('deselect'),\n      description: 'Deselect selected nodes and edges',\n      keys: 'escape',\n      callback: (event) => {\n        if (!disabled) {\n          event.preventDefault();\n          onSelection?.([]);\n          setInternalSelections([]);\n        }\n      }\n    }\n  ]);\n\n  return {\n    onClick,\n    onKeyDown,\n    onCanvasClick,\n    selections: internalSelections,\n    clearSelections,\n    addSelection,\n    removeSelection,\n    toggleSelection,\n    setSelections: setInternalSelections\n  };\n};\n"],"names":["useSelection","selections","nodes","edges","hotkeys","disabled","onSelection","onDataChange","internalSelections","setInternalSelections","useState","metaKeyDown","setMetaKeyDown","addSelection","item","next","removeSelection","i","toggleSelection","clearSelections","onClick","event","data","onKeyDown","onCanvasClick","useHotkeys","n","result","removeNode"],"mappings":"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"}