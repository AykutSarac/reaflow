{"version":3,"file":"LinkingNodes-9163cd32.js","sources":["../../docs/GettingStarted/LinkingNodes.mdx"],"sourcesContent":["import { Meta } from '@storybook/addon-docs/blocks';\n\n<Meta title=\"Docs/Getting Started/Linking Nodes\" />\n\n# Linking Nodes\nreaflow allows users to edit graphs by adding/removing and\nlinking nodes together dynamically. There are 2 event handlers\nyou can subscribe to for checking if a node can be linked\nand performing the actual link.\n\n- `onNodeLinkCheck` - Function you can implement to return true/false if node can link\n- `onNodeLink` - Function you implement to perform the actual link\n\nBelow is a example showing how one might use these two functions together:\n\n```tsx\nimport React, { useState } from 'react';\nimport { Canvas, hasLink, NodeData, EdgeData } from 'reaflow';\n\nexport default () => {\n  const [nodes, setNodes] = useState<NodeData[]>([\n    {\n      id: '1',\n      text: '1'\n    },\n    {\n      id: '2',\n      text: '2'\n    }\n  ]);\n  const [edges, setEdges] = useState<EdgeData[]>([]);\n\n  return (\n    <Canvas\n      nodes={nodes}\n      edges={edges}\n      onNodeLinkCheck={(event, from: NodeData, to: NodeData) => {\n        return !hasLink(edges, from, to);\n      }}\n      onNodeLink={(event, from, to) => {\n        const id = `${from.id}-${to.id}`;\n\n        setEdges([\n          ...edges,\n          {\n            id,\n            from: from.id,\n            to: to.id\n          }\n        ]);\n      }}\n    />\n  )\n};\n```\n\nIn the example, we take advantage of one of the\nhelpers in the library called `hasLink` which will\nreturn if the node is already linked.\n\nIn order to actually add the link, you can\nimplement the `onNodeLink` which is a function\nthat should set a new edge with pointers to the\nsource and target node.\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","MDXContent","MDXLayout"],"mappings":"0bAIA,SAASA,EAAkBC,EAAO,CAChC,MAAMC,EAAc,OAAO,OAAO,CAChC,GAAI,KACJ,EAAG,IACH,GAAI,KACJ,GAAI,KACJ,KAAM,OACN,IAAK,KACN,EAAEC,EAAoB,EAAEF,EAAM,UAAU,EACzC,OAAOG,EAAAA,KAAMC,EAAAA,SAAW,CACtB,SAAU,CAACC,EAAI,IAACC,EAAM,CACpB,MAAO,oCACR,CAAA,EAAG;AAAA,EAAMD,MAAKJ,EAAY,GAAI,CAC7B,GAAI,gBACJ,SAAU,eACX,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,EAAG,CAC5B,SAAU;AAAA;AAAA;AAAA,gCACX,CAAA,EAAG;AAAA,EAAME,OAAMF,EAAY,GAAI,CAC9B,SAAU,CAAC;AAAA,EAAME,OAAMF,EAAY,GAAI,CACrC,SAAU,CAACI,EAAAA,IAAKJ,EAAY,KAAM,CAChC,SAAU,iBACX,CAAA,EAAG,qEAAqE,CAC1E,CAAA,EAAG;AAAA,EAAME,OAAMF,EAAY,GAAI,CAC9B,SAAU,CAACI,EAAAA,IAAKJ,EAAY,KAAM,CAChC,SAAU,YACX,CAAA,EAAG,sDAAsD,CAC3D,CAAA,EAAG;AAAA,CAAI,CACT,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,EAAG,CAC5B,SAAU,4EACX,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,IAAK,CAC9B,SAAUI,EAAAA,IAAKJ,EAAY,KAAM,CAC/B,UAAW,eACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAME,OAAMF,EAAY,EAAG,CAC7B,SAAU,CAAC;AAAA,gCAAmFI,MAAKJ,EAAY,KAAM,CACnH,SAAU,SACX,CAAA,EAAG;AAAA,sCAAoD,CACzD,CAAA,EAAG;AAAA,EAAME,OAAMF,EAAY,EAAG,CAC7B,SAAU,CAAC;AAAA,gBAA8DI,MAAKJ,EAAY,KAAM,CAC9F,SAAU,YACX,CAAA,EAAG;AAAA;AAAA,wBAAgG,CAC1G,CAAK,CAAC,CACN,CAAG,CACH,CACA,SAASM,EAAWP,EAAQ,GAAI,CAC9B,KAAM,CAAC,QAASQ,CAAS,EAAI,OAAO,OAAO,CAAE,EAAEN,EAAoB,EAAEF,EAAM,UAAU,EACrF,OAAOQ,EAAYH,EAAAA,IAAKG,EAAW,OAAO,OAAO,CAAE,EAAER,EAAO,CAC1D,SAAUK,EAAAA,IAAKN,EAAmBC,CAAK,CAC3C,CAAG,CAAC,EAAID,EAAkBC,CAAK,CAC/B"}